version: '3.8'

services:
  frontend-dev:
    build:
      context: .
      target: base
      args:
        - ENABLE_SERVICEWORKER=0
    volumes:
      - ./e2e-tests/app.json:/app/app.json
      - ./app.amsterdam.json:/app/app.base.json
      - ./src:/app/src
      - ./internals:/app/internals
      - ./server:/app/server
    ports:
      - 3001:3001
    command: npm start
    depends_on:
      - backend

  frontend:
    build:
      context: .
      args:
        - ENABLE_SERVICEWORKER=0
    volumes:
      - ./e2e-tests/app.json:/app.json
      - ./app.amsterdam.json:/app.base.json
    ports:
      - 3001:80
    depends_on:
      - backend

  backend:
    image: signalen/backend:latest
    environment:
      - INITIALIZE_WITH_DUMMY_DATA=1
      - AUTOMATICALLY_CREATE_CHILD_SIGNALS_PER_CONTAINER=True
      - API_VALIDATE_SOURCE_AGAINST_SOURCE_MODEL=False
      - API_FILTER_EXTRA_PROPERTIES=False
      - DJANGO_SETTINGS_MODULE=signals.settings.testing
      - ALLOWED_HOSTS=localhost
      - SECRET_KEY=insecure
      - DATABASE_HOST_OVERRIDE=database
      - DATABASE_PORT_OVERRIDE=5432
      - DB_NAME=signals
      - DB_PASSWORD=insecure
      - ALWAYS_OK=True
      - ELASTICSEARCH_HOST=localhost:8000
      - ELASTICSEARCH_INDEX=unknown
    command:
      - /initialize-backend.sh
    volumes:
      - ./scripts/initialize-backend.sh:/initialize-backend.sh
    ports:
      - 8000:8000
    depends_on:
      - database
      - dex

  database:
    image: amsterdam/postgres11:latest
    environment:
      POSTGRES_DB: signals
      POSTGRES_USER: signals
      POSTGRES_PASSWORD: insecure

  dex:
    image: quay.io/dexidp/dex:v2.23.0
    user: root
    command: serve /config.yml
    ports:
      - 5556:5556
    volumes:
      - ./dex.dev.yml:/config.yml
      - dex-data:/data

volumes:
  dex-data:
