// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<App /> routing can navigate to kto form 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "injectedReducers": Object {
        "ktoContainer": [Function],
      },
      "injectedSagas": Object {
        "ktoContainer": Object {
          "mode": "@@saga-injector/restart-on-remount",
          "saga": [Function],
          "task": Object {
            "@@redux-saga/TASK": true,
            "cancel": [Function],
            "cont": undefined,
            "done": Promise {},
            "error": [Function],
            "id": 1,
            "isAborted": [Function],
            "isCancelled": [Function],
            "isRunning": [Function],
            "joiners": Array [],
            "name": "watchKtoContainerSaga",
            "result": [Function],
            "setContext": [Function],
          },
        },
      },
      "replaceReducer": [Function],
      "runSaga": [Function],
      "subscribe": [Function],
      Symbol(Symbol.observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        "/kto/ja/12345-abcsde",
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "pathname": "/kto/ja/12345-abcsde",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/kto/ja/12345-abcsde",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <App
        requestCategories={
          [MockFunction] {
            "calls": Array [
              Array [],
              Array [],
              Array [],
              Array [],
            ],
            "results": Array [
              Object {
                "isThrow": false,
                "value": undefined,
              },
              Object {
                "isThrow": false,
                "value": undefined,
              },
              Object {
                "isThrow": false,
                "value": undefined,
              },
              Object {
                "isThrow": false,
                "value": undefined,
              },
            ],
          }
        }
      >
        <div
          className="app-container container-fluid"
        >
          <Connect(GlobalError)>
            <GlobalError
              error={false}
              onClose={[Function]}
            >
              <div />
            </GlobalError>
          </Connect(GlobalError)>
          <div
            className="container"
          >
            <Connect(HeaderContainer)>
              <HeaderContainer
                onLogin={[Function]}
                onLogout={[Function]}
              >
                <Header
                  isAuthenticated={true}
                  onLoginLogoutButtonClick={[Function]}
                  userName=""
                >
                  <div
                    className="header-component has_header_modern no-print"
                  >
                    <div
                      className="row header-wrapper"
                    >
                      <div
                        className="col-sm-6 grid-header-logo"
                      >
                        <h1
                          className="sitelogo"
                        >
                          <a
                            className="mainlogo"
                            href="http://localhost:3001/"
                          >
                            <span
                              className="logoset"
                            >
                              <LogoSvg
                                alt="Gemeente Amsterdam"
                                className="screen-logo"
                                id="Layer_1"
                                viewBox="0 0 20 68"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <svg
                                  alt="Gemeente Amsterdam"
                                  className="screen-logo"
                                  id="Layer_1"
                                  viewBox="0 0 20 68"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <style>
                                    .st0
                                    {
                                    fill:#ec0000
                                    }
                                  </style>
                                  <title>
                                    Canvas 1
                                  </title>
                                  <title>
                                    Layer 1
                                  </title>
                                  <path
                                    className="st0"
                                    d="M0 64l6-6-6-6 4-4 6 6 6-6 4 4-6 6 6 6-4 4-6-6-6 6-4-4zM0 16l6-6-6-6 4-4 6 6 6-6 4 4-6 6 6 6-4 4-6-6-6 6-4-4zM0 40l6-6-6-6 4-4 6 6 6-6 4 4-6 6 6 6-4 4-6-6-6 6-4-4z"
                                  />
                                </svg>
                              </LogoSvg>
                              <img
                                alt="Gemeente Amsterdam"
                                className="alt-logo"
                                src="IMAGE_MOCK"
                              />
                              <img
                                alt="Gemeente Amsterdam"
                                className="print-logo"
                                src="IMAGE_MOCK"
                              />
                            </span>
                            <span
                              className="logotexts"
                            >
                              <span
                                className="logotext red"
                              >
                                Gemeente
                              </span>
                              <span
                                className="logotext red"
                              >
                                Amsterdam
                              </span>
                            </span>
                          </a>
                        </h1>
                      </div>
                      <div
                        className="col-sm-6"
                      >
                        <nav>
                          <ul
                            className="links"
                          >
                            <li>
                              <span>
                                Ingelogd als: 
                                <b />
                              </span>
                            </li>
                            <li>
                              <a
                                className="header-component__logout"
                                href=""
                                onClick={[Function]}
                              >
                                Uitloggen
                              </a>
                            </li>
                          </ul>
                        </nav>
                      </div>
                    </div>
                  </div>
                </Header>
              </HeaderContainer>
            </Connect(HeaderContainer)>
          </div>
          <div
            className="container-fluid"
          >
            <Connect(MainMenu)>
              <MainMenu
                isAuthenticated={false}
                permissions={Array []}
                resetIncident={[Function]}
              >
                <div
                  className="row main-menu-component no-print"
                >
                  <div
                    className="container type-nav-primair"
                  >
                    <nav>
                      <ul
                        className="links horizontal"
                      >
                        <li>
                          <NavLink
                            activeClassName="active"
                            aria-current="page"
                            onClick={[Function]}
                            to="/"
                          >
                            <Route
                              path="\\\\/"
                            >
                              <Link
                                aria-current="page"
                                className="active"
                                onClick={[Function]}
                                replace={false}
                                style={Object {}}
                                to="/"
                              >
                                <a
                                  aria-current="page"
                                  className="active"
                                  href="/"
                                  onClick={[Function]}
                                  style={Object {}}
                                >
                                  <span
                                    className="linklabel"
                                  >
                                    Nieuwe melding
                                  </span>
                                </a>
                              </Link>
                            </Route>
                          </NavLink>
                        </li>
                      </ul>
                    </nav>
                  </div>
                </div>
              </MainMenu>
            </Connect(MainMenu)>
          </div>
          <div
            className="container content"
          >
            <Switch>
              <Route
                component={[Function]}
                computedMatch={
                  Object {
                    "isExact": true,
                    "params": Object {
                      "uuid": "12345-abcsde",
                      "yesNo": "ja",
                    },
                    "path": "/kto/:yesNo/:uuid",
                    "url": "/kto/ja/12345-abcsde",
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "pathname": "/kto/ja/12345-abcsde",
                    "search": "",
                    "state": undefined,
                  }
                }
                path="/kto/:yesNo/:uuid"
              >
                <component
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "pathname": "/kto/ja/12345-abcsde",
                          "search": "",
                          "state": undefined,
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/kto/ja/12345-abcsde",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                  location={
                    Object {
                      "hash": "",
                      "pathname": "/kto/ja/12345-abcsde",
                      "search": "",
                      "state": undefined,
                    }
                  }
                  match={
                    Object {
                      "isExact": true,
                      "params": Object {
                        "uuid": "12345-abcsde",
                        "yesNo": "ja",
                      },
                      "path": "/kto/:yesNo/:uuid",
                      "url": "/kto/ja/12345-abcsde",
                    }
                  }
                >
                  <withReducer(withSaga(Connect(KtoContainer)))
                    uuid="12345-abcsde"
                    yesNo="ja"
                  >
                    <withSaga(Connect(KtoContainer))
                      uuid="12345-abcsde"
                      yesNo="ja"
                    >
                      <Connect(KtoContainer)
                        uuid="12345-abcsde"
                        yesNo="ja"
                      >
                        <KtoContainer
                          checkKto={[Function]}
                          ktoContainer={
                            Object {
                              "answers": Object {},
                              "error": false,
                              "form": Object {
                                "is_satisfied": true,
                              },
                              "ktoError": false,
                              "ktoFinished": false,
                              "loading": false,
                              "statusError": null,
                              "uuid": "12345-abcsde",
                            }
                          }
                          onStoreKto={[Function]}
                          onUpdateKto={[Function]}
                          requestKtoAnswers={[Function]}
                          uuid="12345-abcsde"
                          yesNo="ja"
                        >
                          <div
                            className="kto-container"
                          >
                            <div
                              className="container"
                            >
                              <div
                                className="row"
                              >
                                <div
                                  className="col-12"
                                >
                                  <div>
                                    <div>
                                      <h1>
                                        Ja, ik ben tevreden met de behandeling van mijn melding
                                      </h1>
                                      <KtoForm
                                        ktoContainer={
                                          Object {
                                            "answers": Object {},
                                            "error": false,
                                            "form": Object {
                                              "is_satisfied": true,
                                            },
                                            "ktoError": false,
                                            "ktoFinished": false,
                                            "loading": false,
                                            "statusError": null,
                                            "uuid": "12345-abcsde",
                                          }
                                        }
                                        onStoreKto={[Function]}
                                        onUpdateKto={[Function]}
                                      >
                                        <div
                                          className="kto-form"
                                        >
                                          <form
                                            onSubmit={[Function]}
                                          >
                                            <FormGenerator
                                              fieldConfig={
                                                Object {
                                                  "controls": Object {
                                                    "$field_0": Object {
                                                      "isStatic": false,
                                                      "render": [Function],
                                                    },
                                                    "allows_contact": Object {
                                                      "meta": Object {
                                                        "className": "col-sm-12 col-md-8",
                                                        "isVisible": true,
                                                        "label": "Mogen wij contact met u opnemen naar aanleiding van uw feedback?",
                                                        "name": "allows_contact",
                                                        "value": "Ja",
                                                      },
                                                      "render": [Function],
                                                    },
                                                    "is_satisfied": Object {
                                                      "meta": Object {
                                                        "isVisible": true,
                                                        "label": "Is tevreden?",
                                                        "name": "is_satisfied",
                                                      },
                                                      "render": [Function],
                                                    },
                                                    "niet_tevreden": Object {
                                                      "meta": Object {
                                                        "className": "col-sm-12 col-md-8",
                                                        "ifAllOf": Object {
                                                          "is_satisfied": false,
                                                        },
                                                        "isVisible": false,
                                                        "label": "Waarom bent u ontevreden?",
                                                        "name": "niet_tevreden",
                                                        "subtitle": "Eén antwoord mogelijk, kies de belangrijkste reden.",
                                                        "values": Object {},
                                                      },
                                                      "options": Object {
                                                        "validators": Array [
                                                          [Function],
                                                        ],
                                                      },
                                                      "render": [Function],
                                                    },
                                                    "niet_tevreden_anders": Object {
                                                      "meta": Object {
                                                        "className": "col-sm-12 col-md-8 kto-form--collapse-to-previous-question",
                                                        "ifAllOf": Object {
                                                          "is_satisfied": false,
                                                          "niet_tevreden": "anders",
                                                        },
                                                        "isVisible": false,
                                                        "name": "niet_tevreden_anders",
                                                      },
                                                      "render": [Function],
                                                    },
                                                    "tevreden": Object {
                                                      "meta": Object {
                                                        "className": "col-sm-12 col-md-8",
                                                        "ifAllOf": Object {
                                                          "is_satisfied": true,
                                                        },
                                                        "isVisible": true,
                                                        "label": "Waarom bent u tevreden?",
                                                        "name": "tevreden",
                                                        "subtitle": "Eén antwoord mogelijk, kies de belangrijkste reden.",
                                                        "values": Object {},
                                                      },
                                                      "options": Object {
                                                        "validators": Array [
                                                          [Function],
                                                        ],
                                                      },
                                                      "render": [Function],
                                                    },
                                                    "tevreden_anders": Object {
                                                      "meta": Object {
                                                        "className": "col-sm-12 col-md-8 kto-form--collapse-to-previous-question",
                                                        "ifAllOf": Object {
                                                          "is_satisfied": true,
                                                          "tevreden": "anders",
                                                        },
                                                        "isVisible": false,
                                                        "name": "tevreden_anders",
                                                      },
                                                      "render": [Function],
                                                    },
                                                    "text_extra": Object {
                                                      "meta": Object {
                                                        "className": "col-sm-12 col-md-8",
                                                        "isVisible": true,
                                                        "label": "Wilt u verder nog iets vermelden of toelichten?",
                                                        "maxLength": 1000,
                                                        "name": "text_extra",
                                                      },
                                                      "options": Object {
                                                        "validators": Array [
                                                          [Function],
                                                        ],
                                                      },
                                                      "render": [Function],
                                                    },
                                                  },
                                                }
                                              }
                                              onMount={[Function]}
                                              onUnmount={[Function]}
                                            >
                                              <FieldGroup
                                                control={
                                                  FormGroup {
                                                    "_onDisabledChange": Array [],
                                                    "_pendingChange": false,
                                                    "_pendingDirty": false,
                                                    "_pendingTouched": false,
                                                    "asyncValidator": null,
                                                    "controls": Object {
                                                      "allows_contact": FormControl {
                                                        "_onCollectionChange": [Function],
                                                        "_onDisabledChange": Array [],
                                                        "_parent": [Circular],
                                                        "_pendingChange": true,
                                                        "_pendingDirty": false,
                                                        "_pendingTouched": false,
                                                        "_pendingValue": undefined,
                                                        "asyncValidator": null,
                                                        "errors": null,
                                                        "formState": undefined,
                                                        "get": [Function],
                                                        "getError": [Function],
                                                        "handler": [Function],
                                                        "hasError": [Function],
                                                        "meta": Object {
                                                          "className": "col-sm-12 col-md-8",
                                                          "isVisible": true,
                                                          "label": "Mogen wij contact met u opnemen naar aanleiding van uw feedback?",
                                                          "name": "allows_contact",
                                                          "value": "Ja",
                                                        },
                                                        "onBlur": [Function],
                                                        "onBlurChanges": Observable {
                                                          "observers": Array [],
                                                        },
                                                        "onChange": [Function],
                                                        "onValueChanges": Observable {
                                                          "observers": Array [],
                                                        },
                                                        "patchValue": [Function],
                                                        "pristine": true,
                                                        "reset": [Function],
                                                        "setValue": [Function],
                                                        "stateChanges": Observable {
                                                          "observers": Array [
                                                            [Function],
                                                          ],
                                                        },
                                                        "status": "VALID",
                                                        "statusChanges": Observable {
                                                          "observers": Array [],
                                                        },
                                                        "submitted": false,
                                                        "touched": false,
                                                        "validator": null,
                                                        "validatorsOrOpts": undefined,
                                                        "value": undefined,
                                                        "valueChanges": Observable {
                                                          "observers": Array [],
                                                        },
                                                      },
                                                      "is_satisfied": FormControl {
                                                        "_onCollectionChange": [Function],
                                                        "_onDisabledChange": Array [],
                                                        "_parent": [Circular],
                                                        "_pendingChange": true,
                                                        "_pendingDirty": false,
                                                        "_pendingTouched": false,
                                                        "_pendingValue": undefined,
                                                        "asyncValidator": null,
                                                        "errors": null,
                                                        "formState": undefined,
                                                        "get": [Function],
                                                        "getError": [Function],
                                                        "handler": [Function],
                                                        "hasError": [Function],
                                                        "meta": Object {
                                                          "isVisible": true,
                                                          "label": "Is tevreden?",
                                                          "name": "is_satisfied",
                                                        },
                                                        "onBlur": [Function],
                                                        "onBlurChanges": Observable {
                                                          "observers": Array [],
                                                        },
                                                        "onChange": [Function],
                                                        "onValueChanges": Observable {
                                                          "observers": Array [],
                                                        },
                                                        "patchValue": [Function],
                                                        "pristine": true,
                                                        "reset": [Function],
                                                        "setValue": [Function],
                                                        "stateChanges": Observable {
                                                          "observers": Array [
                                                            [Function],
                                                          ],
                                                        },
                                                        "status": "VALID",
                                                        "statusChanges": Observable {
                                                          "observers": Array [],
                                                        },
                                                        "submitted": false,
                                                        "touched": false,
                                                        "validator": null,
                                                        "validatorsOrOpts": undefined,
                                                        "value": undefined,
                                                        "valueChanges": Observable {
                                                          "observers": Array [],
                                                        },
                                                      },
                                                      "niet_tevreden": FormControl {
                                                        "_onCollectionChange": [Function],
                                                        "_onDisabledChange": Array [],
                                                        "_parent": [Circular],
                                                        "_pendingChange": true,
                                                        "_pendingDirty": false,
                                                        "_pendingTouched": false,
                                                        "_pendingValue": undefined,
                                                        "asyncValidator": null,
                                                        "errors": Object {
                                                          "required": true,
                                                        },
                                                        "formState": undefined,
                                                        "get": [Function],
                                                        "getError": [Function],
                                                        "handler": [Function],
                                                        "hasError": [Function],
                                                        "meta": Object {
                                                          "className": "col-sm-12 col-md-8",
                                                          "ifAllOf": Object {
                                                            "is_satisfied": false,
                                                          },
                                                          "isVisible": false,
                                                          "label": "Waarom bent u ontevreden?",
                                                          "name": "niet_tevreden",
                                                          "subtitle": "Eén antwoord mogelijk, kies de belangrijkste reden.",
                                                          "values": Object {},
                                                        },
                                                        "onBlur": [Function],
                                                        "onBlurChanges": Observable {
                                                          "observers": Array [],
                                                        },
                                                        "onChange": [Function],
                                                        "onValueChanges": Observable {
                                                          "observers": Array [],
                                                        },
                                                        "patchValue": [Function],
                                                        "pristine": true,
                                                        "reset": [Function],
                                                        "setValue": [Function],
                                                        "stateChanges": Observable {
                                                          "observers": Array [
                                                            [Function],
                                                          ],
                                                        },
                                                        "status": "INVALID",
                                                        "statusChanges": Observable {
                                                          "observers": Array [],
                                                        },
                                                        "submitted": false,
                                                        "touched": false,
                                                        "validator": [Function],
                                                        "validatorsOrOpts": Object {
                                                          "validators": Array [
                                                            [Function],
                                                          ],
                                                        },
                                                        "value": undefined,
                                                        "valueChanges": Observable {
                                                          "observers": Array [],
                                                        },
                                                      },
                                                      "niet_tevreden_anders": FormControl {
                                                        "_onCollectionChange": [Function],
                                                        "_onDisabledChange": Array [],
                                                        "_parent": [Circular],
                                                        "_pendingChange": true,
                                                        "_pendingDirty": false,
                                                        "_pendingTouched": false,
                                                        "_pendingValue": undefined,
                                                        "asyncValidator": null,
                                                        "errors": null,
                                                        "formState": undefined,
                                                        "get": [Function],
                                                        "getError": [Function],
                                                        "handler": [Function],
                                                        "hasError": [Function],
                                                        "meta": Object {
                                                          "className": "col-sm-12 col-md-8 kto-form--collapse-to-previous-question",
                                                          "ifAllOf": Object {
                                                            "is_satisfied": false,
                                                            "niet_tevreden": "anders",
                                                          },
                                                          "isVisible": false,
                                                          "name": "niet_tevreden_anders",
                                                        },
                                                        "onBlur": [Function],
                                                        "onBlurChanges": Observable {
                                                          "observers": Array [],
                                                        },
                                                        "onChange": [Function],
                                                        "onValueChanges": Observable {
                                                          "observers": Array [],
                                                        },
                                                        "patchValue": [Function],
                                                        "pristine": true,
                                                        "reset": [Function],
                                                        "setValue": [Function],
                                                        "stateChanges": Observable {
                                                          "observers": Array [
                                                            [Function],
                                                          ],
                                                        },
                                                        "status": "VALID",
                                                        "statusChanges": Observable {
                                                          "observers": Array [],
                                                        },
                                                        "submitted": false,
                                                        "touched": false,
                                                        "validator": null,
                                                        "validatorsOrOpts": undefined,
                                                        "value": undefined,
                                                        "valueChanges": Observable {
                                                          "observers": Array [],
                                                        },
                                                      },
                                                      "tevreden": FormControl {
                                                        "_onCollectionChange": [Function],
                                                        "_onDisabledChange": Array [],
                                                        "_parent": [Circular],
                                                        "_pendingChange": true,
                                                        "_pendingDirty": false,
                                                        "_pendingTouched": false,
                                                        "_pendingValue": undefined,
                                                        "asyncValidator": null,
                                                        "errors": Object {
                                                          "required": true,
                                                        },
                                                        "formState": undefined,
                                                        "get": [Function],
                                                        "getError": [Function],
                                                        "handler": [Function],
                                                        "hasError": [Function],
                                                        "meta": Object {
                                                          "className": "col-sm-12 col-md-8",
                                                          "ifAllOf": Object {
                                                            "is_satisfied": true,
                                                          },
                                                          "isVisible": true,
                                                          "label": "Waarom bent u tevreden?",
                                                          "name": "tevreden",
                                                          "subtitle": "Eén antwoord mogelijk, kies de belangrijkste reden.",
                                                          "values": Object {},
                                                        },
                                                        "onBlur": [Function],
                                                        "onBlurChanges": Observable {
                                                          "observers": Array [],
                                                        },
                                                        "onChange": [Function],
                                                        "onValueChanges": Observable {
                                                          "observers": Array [],
                                                        },
                                                        "patchValue": [Function],
                                                        "pristine": true,
                                                        "reset": [Function],
                                                        "setValue": [Function],
                                                        "stateChanges": Observable {
                                                          "observers": Array [
                                                            [Function],
                                                          ],
                                                        },
                                                        "status": "INVALID",
                                                        "statusChanges": Observable {
                                                          "observers": Array [],
                                                        },
                                                        "submitted": false,
                                                        "touched": false,
                                                        "validator": [Function],
                                                        "validatorsOrOpts": Object {
                                                          "validators": Array [
                                                            [Function],
                                                          ],
                                                        },
                                                        "value": undefined,
                                                        "valueChanges": Observable {
                                                          "observers": Array [],
                                                        },
                                                      },
                                                      "tevreden_anders": FormControl {
                                                        "_onCollectionChange": [Function],
                                                        "_onDisabledChange": Array [],
                                                        "_parent": [Circular],
                                                        "_pendingChange": true,
                                                        "_pendingDirty": false,
                                                        "_pendingTouched": false,
                                                        "_pendingValue": undefined,
                                                        "asyncValidator": null,
                                                        "errors": null,
                                                        "formState": undefined,
                                                        "get": [Function],
                                                        "getError": [Function],
                                                        "handler": [Function],
                                                        "hasError": [Function],
                                                        "meta": Object {
                                                          "className": "col-sm-12 col-md-8 kto-form--collapse-to-previous-question",
                                                          "ifAllOf": Object {
                                                            "is_satisfied": true,
                                                            "tevreden": "anders",
                                                          },
                                                          "isVisible": false,
                                                          "name": "tevreden_anders",
                                                        },
                                                        "onBlur": [Function],
                                                        "onBlurChanges": Observable {
                                                          "observers": Array [],
                                                        },
                                                        "onChange": [Function],
                                                        "onValueChanges": Observable {
                                                          "observers": Array [],
                                                        },
                                                        "patchValue": [Function],
                                                        "pristine": true,
                                                        "reset": [Function],
                                                        "setValue": [Function],
                                                        "stateChanges": Observable {
                                                          "observers": Array [
                                                            [Function],
                                                          ],
                                                        },
                                                        "status": "VALID",
                                                        "statusChanges": Observable {
                                                          "observers": Array [],
                                                        },
                                                        "submitted": false,
                                                        "touched": false,
                                                        "validator": null,
                                                        "validatorsOrOpts": undefined,
                                                        "value": undefined,
                                                        "valueChanges": Observable {
                                                          "observers": Array [],
                                                        },
                                                      },
                                                      "text_extra": FormControl {
                                                        "_onCollectionChange": [Function],
                                                        "_onDisabledChange": Array [],
                                                        "_parent": [Circular],
                                                        "_pendingChange": true,
                                                        "_pendingDirty": false,
                                                        "_pendingTouched": false,
                                                        "_pendingValue": undefined,
                                                        "asyncValidator": null,
                                                        "errors": null,
                                                        "formState": undefined,
                                                        "get": [Function],
                                                        "getError": [Function],
                                                        "handler": [Function],
                                                        "hasError": [Function],
                                                        "meta": Object {
                                                          "className": "col-sm-12 col-md-8",
                                                          "isVisible": true,
                                                          "label": "Wilt u verder nog iets vermelden of toelichten?",
                                                          "maxLength": 1000,
                                                          "name": "text_extra",
                                                        },
                                                        "onBlur": [Function],
                                                        "onBlurChanges": Observable {
                                                          "observers": Array [],
                                                        },
                                                        "onChange": [Function],
                                                        "onValueChanges": Observable {
                                                          "observers": Array [],
                                                        },
                                                        "patchValue": [Function],
                                                        "pristine": true,
                                                        "reset": [Function],
                                                        "setValue": [Function],
                                                        "stateChanges": Observable {
                                                          "observers": Array [
                                                            [Function],
                                                          ],
                                                        },
                                                        "status": "VALID",
                                                        "statusChanges": Observable {
                                                          "observers": Array [],
                                                        },
                                                        "submitted": false,
                                                        "touched": false,
                                                        "validator": [Function],
                                                        "validatorsOrOpts": Object {
                                                          "validators": Array [
                                                            [Function],
                                                          ],
                                                        },
                                                        "value": undefined,
                                                        "valueChanges": Observable {
                                                          "observers": Array [],
                                                        },
                                                      },
                                                    },
                                                    "errors": null,
                                                    "get": [Function],
                                                    "getError": [Function],
                                                    "handleSubmit": [Function],
                                                    "hasError": [Function],
                                                    "meta": Object {
                                                      "updateIncident": [Function],
                                                    },
                                                    "patchValue": [Function],
                                                    "pristine": true,
                                                    "reset": [Function],
                                                    "setValue": [Function],
                                                    "stateChanges": Observable {
                                                      "observers": Array [
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "status": "INVALID",
                                                    "statusChanges": Observable {
                                                      "observers": Array [],
                                                    },
                                                    "submitted": false,
                                                    "touched": false,
                                                    "validator": null,
                                                    "validatorOrOpts": undefined,
                                                    "value": Object {
                                                      "allows_contact": undefined,
                                                      "is_satisfied": undefined,
                                                      "niet_tevreden": undefined,
                                                      "niet_tevreden_anders": undefined,
                                                      "tevreden": undefined,
                                                      "tevreden_anders": undefined,
                                                      "text_extra": undefined,
                                                    },
                                                    "valueChanges": Observable {
                                                      "observers": Array [],
                                                    },
                                                  }
                                                }
                                                key="my_form"
                                                render={[Function]}
                                                strict={true}
                                              >
                                                <Field
                                                  control={
                                                    FormGroup {
                                                      "_onDisabledChange": Array [],
                                                      "_pendingChange": false,
                                                      "_pendingDirty": false,
                                                      "_pendingTouched": false,
                                                      "asyncValidator": null,
                                                      "controls": Object {
                                                        "allows_contact": FormControl {
                                                          "_onCollectionChange": [Function],
                                                          "_onDisabledChange": Array [],
                                                          "_parent": [Circular],
                                                          "_pendingChange": true,
                                                          "_pendingDirty": false,
                                                          "_pendingTouched": false,
                                                          "_pendingValue": undefined,
                                                          "asyncValidator": null,
                                                          "errors": null,
                                                          "formState": undefined,
                                                          "get": [Function],
                                                          "getError": [Function],
                                                          "handler": [Function],
                                                          "hasError": [Function],
                                                          "meta": Object {
                                                            "className": "col-sm-12 col-md-8",
                                                            "isVisible": true,
                                                            "label": "Mogen wij contact met u opnemen naar aanleiding van uw feedback?",
                                                            "name": "allows_contact",
                                                            "value": "Ja",
                                                          },
                                                          "onBlur": [Function],
                                                          "onBlurChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "onChange": [Function],
                                                          "onValueChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "patchValue": [Function],
                                                          "pristine": true,
                                                          "reset": [Function],
                                                          "setValue": [Function],
                                                          "stateChanges": Observable {
                                                            "observers": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "status": "VALID",
                                                          "statusChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "submitted": false,
                                                          "touched": false,
                                                          "validator": null,
                                                          "validatorsOrOpts": undefined,
                                                          "value": undefined,
                                                          "valueChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                        },
                                                        "is_satisfied": FormControl {
                                                          "_onCollectionChange": [Function],
                                                          "_onDisabledChange": Array [],
                                                          "_parent": [Circular],
                                                          "_pendingChange": true,
                                                          "_pendingDirty": false,
                                                          "_pendingTouched": false,
                                                          "_pendingValue": undefined,
                                                          "asyncValidator": null,
                                                          "errors": null,
                                                          "formState": undefined,
                                                          "get": [Function],
                                                          "getError": [Function],
                                                          "handler": [Function],
                                                          "hasError": [Function],
                                                          "meta": Object {
                                                            "isVisible": true,
                                                            "label": "Is tevreden?",
                                                            "name": "is_satisfied",
                                                          },
                                                          "onBlur": [Function],
                                                          "onBlurChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "onChange": [Function],
                                                          "onValueChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "patchValue": [Function],
                                                          "pristine": true,
                                                          "reset": [Function],
                                                          "setValue": [Function],
                                                          "stateChanges": Observable {
                                                            "observers": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "status": "VALID",
                                                          "statusChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "submitted": false,
                                                          "touched": false,
                                                          "validator": null,
                                                          "validatorsOrOpts": undefined,
                                                          "value": undefined,
                                                          "valueChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                        },
                                                        "niet_tevreden": FormControl {
                                                          "_onCollectionChange": [Function],
                                                          "_onDisabledChange": Array [],
                                                          "_parent": [Circular],
                                                          "_pendingChange": true,
                                                          "_pendingDirty": false,
                                                          "_pendingTouched": false,
                                                          "_pendingValue": undefined,
                                                          "asyncValidator": null,
                                                          "errors": Object {
                                                            "required": true,
                                                          },
                                                          "formState": undefined,
                                                          "get": [Function],
                                                          "getError": [Function],
                                                          "handler": [Function],
                                                          "hasError": [Function],
                                                          "meta": Object {
                                                            "className": "col-sm-12 col-md-8",
                                                            "ifAllOf": Object {
                                                              "is_satisfied": false,
                                                            },
                                                            "isVisible": false,
                                                            "label": "Waarom bent u ontevreden?",
                                                            "name": "niet_tevreden",
                                                            "subtitle": "Eén antwoord mogelijk, kies de belangrijkste reden.",
                                                            "values": Object {},
                                                          },
                                                          "onBlur": [Function],
                                                          "onBlurChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "onChange": [Function],
                                                          "onValueChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "patchValue": [Function],
                                                          "pristine": true,
                                                          "reset": [Function],
                                                          "setValue": [Function],
                                                          "stateChanges": Observable {
                                                            "observers": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "status": "INVALID",
                                                          "statusChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "submitted": false,
                                                          "touched": false,
                                                          "validator": [Function],
                                                          "validatorsOrOpts": Object {
                                                            "validators": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "value": undefined,
                                                          "valueChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                        },
                                                        "niet_tevreden_anders": FormControl {
                                                          "_onCollectionChange": [Function],
                                                          "_onDisabledChange": Array [],
                                                          "_parent": [Circular],
                                                          "_pendingChange": true,
                                                          "_pendingDirty": false,
                                                          "_pendingTouched": false,
                                                          "_pendingValue": undefined,
                                                          "asyncValidator": null,
                                                          "errors": null,
                                                          "formState": undefined,
                                                          "get": [Function],
                                                          "getError": [Function],
                                                          "handler": [Function],
                                                          "hasError": [Function],
                                                          "meta": Object {
                                                            "className": "col-sm-12 col-md-8 kto-form--collapse-to-previous-question",
                                                            "ifAllOf": Object {
                                                              "is_satisfied": false,
                                                              "niet_tevreden": "anders",
                                                            },
                                                            "isVisible": false,
                                                            "name": "niet_tevreden_anders",
                                                          },
                                                          "onBlur": [Function],
                                                          "onBlurChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "onChange": [Function],
                                                          "onValueChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "patchValue": [Function],
                                                          "pristine": true,
                                                          "reset": [Function],
                                                          "setValue": [Function],
                                                          "stateChanges": Observable {
                                                            "observers": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "status": "VALID",
                                                          "statusChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "submitted": false,
                                                          "touched": false,
                                                          "validator": null,
                                                          "validatorsOrOpts": undefined,
                                                          "value": undefined,
                                                          "valueChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                        },
                                                        "tevreden": FormControl {
                                                          "_onCollectionChange": [Function],
                                                          "_onDisabledChange": Array [],
                                                          "_parent": [Circular],
                                                          "_pendingChange": true,
                                                          "_pendingDirty": false,
                                                          "_pendingTouched": false,
                                                          "_pendingValue": undefined,
                                                          "asyncValidator": null,
                                                          "errors": Object {
                                                            "required": true,
                                                          },
                                                          "formState": undefined,
                                                          "get": [Function],
                                                          "getError": [Function],
                                                          "handler": [Function],
                                                          "hasError": [Function],
                                                          "meta": Object {
                                                            "className": "col-sm-12 col-md-8",
                                                            "ifAllOf": Object {
                                                              "is_satisfied": true,
                                                            },
                                                            "isVisible": true,
                                                            "label": "Waarom bent u tevreden?",
                                                            "name": "tevreden",
                                                            "subtitle": "Eén antwoord mogelijk, kies de belangrijkste reden.",
                                                            "values": Object {},
                                                          },
                                                          "onBlur": [Function],
                                                          "onBlurChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "onChange": [Function],
                                                          "onValueChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "patchValue": [Function],
                                                          "pristine": true,
                                                          "reset": [Function],
                                                          "setValue": [Function],
                                                          "stateChanges": Observable {
                                                            "observers": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "status": "INVALID",
                                                          "statusChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "submitted": false,
                                                          "touched": false,
                                                          "validator": [Function],
                                                          "validatorsOrOpts": Object {
                                                            "validators": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "value": undefined,
                                                          "valueChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                        },
                                                        "tevreden_anders": FormControl {
                                                          "_onCollectionChange": [Function],
                                                          "_onDisabledChange": Array [],
                                                          "_parent": [Circular],
                                                          "_pendingChange": true,
                                                          "_pendingDirty": false,
                                                          "_pendingTouched": false,
                                                          "_pendingValue": undefined,
                                                          "asyncValidator": null,
                                                          "errors": null,
                                                          "formState": undefined,
                                                          "get": [Function],
                                                          "getError": [Function],
                                                          "handler": [Function],
                                                          "hasError": [Function],
                                                          "meta": Object {
                                                            "className": "col-sm-12 col-md-8 kto-form--collapse-to-previous-question",
                                                            "ifAllOf": Object {
                                                              "is_satisfied": true,
                                                              "tevreden": "anders",
                                                            },
                                                            "isVisible": false,
                                                            "name": "tevreden_anders",
                                                          },
                                                          "onBlur": [Function],
                                                          "onBlurChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "onChange": [Function],
                                                          "onValueChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "patchValue": [Function],
                                                          "pristine": true,
                                                          "reset": [Function],
                                                          "setValue": [Function],
                                                          "stateChanges": Observable {
                                                            "observers": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "status": "VALID",
                                                          "statusChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "submitted": false,
                                                          "touched": false,
                                                          "validator": null,
                                                          "validatorsOrOpts": undefined,
                                                          "value": undefined,
                                                          "valueChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                        },
                                                        "text_extra": FormControl {
                                                          "_onCollectionChange": [Function],
                                                          "_onDisabledChange": Array [],
                                                          "_parent": [Circular],
                                                          "_pendingChange": true,
                                                          "_pendingDirty": false,
                                                          "_pendingTouched": false,
                                                          "_pendingValue": undefined,
                                                          "asyncValidator": null,
                                                          "errors": null,
                                                          "formState": undefined,
                                                          "get": [Function],
                                                          "getError": [Function],
                                                          "handler": [Function],
                                                          "hasError": [Function],
                                                          "meta": Object {
                                                            "className": "col-sm-12 col-md-8",
                                                            "isVisible": true,
                                                            "label": "Wilt u verder nog iets vermelden of toelichten?",
                                                            "maxLength": 1000,
                                                            "name": "text_extra",
                                                          },
                                                          "onBlur": [Function],
                                                          "onBlurChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "onChange": [Function],
                                                          "onValueChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "patchValue": [Function],
                                                          "pristine": true,
                                                          "reset": [Function],
                                                          "setValue": [Function],
                                                          "stateChanges": Observable {
                                                            "observers": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "status": "VALID",
                                                          "statusChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "submitted": false,
                                                          "touched": false,
                                                          "validator": [Function],
                                                          "validatorsOrOpts": Object {
                                                            "validators": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "value": undefined,
                                                          "valueChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                        },
                                                      },
                                                      "errors": null,
                                                      "get": [Function],
                                                      "getError": [Function],
                                                      "handleSubmit": [Function],
                                                      "hasError": [Function],
                                                      "meta": Object {
                                                        "updateIncident": [Function],
                                                      },
                                                      "patchValue": [Function],
                                                      "pristine": true,
                                                      "reset": [Function],
                                                      "setValue": [Function],
                                                      "stateChanges": Observable {
                                                        "observers": Array [
                                                          [Function],
                                                          [Function],
                                                        ],
                                                      },
                                                      "status": "INVALID",
                                                      "statusChanges": Observable {
                                                        "observers": Array [],
                                                      },
                                                      "submitted": false,
                                                      "touched": false,
                                                      "validator": null,
                                                      "validatorOrOpts": undefined,
                                                      "value": Object {
                                                        "allows_contact": undefined,
                                                        "is_satisfied": undefined,
                                                        "niet_tevreden": undefined,
                                                        "niet_tevreden_anders": undefined,
                                                        "tevreden": undefined,
                                                        "tevreden_anders": undefined,
                                                        "text_extra": undefined,
                                                      },
                                                      "valueChanges": Observable {
                                                        "observers": Array [],
                                                      },
                                                    }
                                                  }
                                                  render={[Function]}
                                                  strict={true}
                                                >
                                                  <FieldControl
                                                    key="tevreden"
                                                    meta={
                                                      Object {
                                                        "className": "col-sm-12 col-md-8",
                                                        "ifAllOf": Object {
                                                          "is_satisfied": true,
                                                        },
                                                        "isVisible": true,
                                                        "label": "Waarom bent u tevreden?",
                                                        "name": "tevreden",
                                                        "subtitle": "Eén antwoord mogelijk, kies de belangrijkste reden.",
                                                        "values": Object {},
                                                      }
                                                    }
                                                    name="tevreden"
                                                    options={
                                                      Object {
                                                        "validators": Array [
                                                          [Function],
                                                        ],
                                                      }
                                                    }
                                                    render={[Function]}
                                                    strict={true}
                                                  >
                                                    <Field
                                                      control={
                                                        FormControl {
                                                          "_onCollectionChange": [Function],
                                                          "_onDisabledChange": Array [],
                                                          "_parent": FormGroup {
                                                            "_onDisabledChange": Array [],
                                                            "_pendingChange": false,
                                                            "_pendingDirty": false,
                                                            "_pendingTouched": false,
                                                            "asyncValidator": null,
                                                            "controls": Object {
                                                              "allows_contact": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": null,
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8",
                                                                  "isVisible": true,
                                                                  "label": "Mogen wij contact met u opnemen naar aanleiding van uw feedback?",
                                                                  "name": "allows_contact",
                                                                  "value": "Ja",
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "VALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": null,
                                                                "validatorsOrOpts": undefined,
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "is_satisfied": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": null,
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "isVisible": true,
                                                                  "label": "Is tevreden?",
                                                                  "name": "is_satisfied",
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "VALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": null,
                                                                "validatorsOrOpts": undefined,
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "niet_tevreden": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": Object {
                                                                  "required": true,
                                                                },
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8",
                                                                  "ifAllOf": Object {
                                                                    "is_satisfied": false,
                                                                  },
                                                                  "isVisible": false,
                                                                  "label": "Waarom bent u ontevreden?",
                                                                  "name": "niet_tevreden",
                                                                  "subtitle": "Eén antwoord mogelijk, kies de belangrijkste reden.",
                                                                  "values": Object {},
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "INVALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": [Function],
                                                                "validatorsOrOpts": Object {
                                                                  "validators": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "niet_tevreden_anders": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": null,
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8 kto-form--collapse-to-previous-question",
                                                                  "ifAllOf": Object {
                                                                    "is_satisfied": false,
                                                                    "niet_tevreden": "anders",
                                                                  },
                                                                  "isVisible": false,
                                                                  "name": "niet_tevreden_anders",
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "VALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": null,
                                                                "validatorsOrOpts": undefined,
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "tevreden": [Circular],
                                                              "tevreden_anders": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": null,
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8 kto-form--collapse-to-previous-question",
                                                                  "ifAllOf": Object {
                                                                    "is_satisfied": true,
                                                                    "tevreden": "anders",
                                                                  },
                                                                  "isVisible": false,
                                                                  "name": "tevreden_anders",
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "VALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": null,
                                                                "validatorsOrOpts": undefined,
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "text_extra": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": null,
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8",
                                                                  "isVisible": true,
                                                                  "label": "Wilt u verder nog iets vermelden of toelichten?",
                                                                  "maxLength": 1000,
                                                                  "name": "text_extra",
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "VALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": [Function],
                                                                "validatorsOrOpts": Object {
                                                                  "validators": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                            },
                                                            "errors": null,
                                                            "get": [Function],
                                                            "getError": [Function],
                                                            "handleSubmit": [Function],
                                                            "hasError": [Function],
                                                            "meta": Object {
                                                              "updateIncident": [Function],
                                                            },
                                                            "patchValue": [Function],
                                                            "pristine": true,
                                                            "reset": [Function],
                                                            "setValue": [Function],
                                                            "stateChanges": Observable {
                                                              "observers": Array [
                                                                [Function],
                                                                [Function],
                                                              ],
                                                            },
                                                            "status": "INVALID",
                                                            "statusChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                            "submitted": false,
                                                            "touched": false,
                                                            "validator": null,
                                                            "validatorOrOpts": undefined,
                                                            "value": Object {
                                                              "allows_contact": undefined,
                                                              "is_satisfied": undefined,
                                                              "niet_tevreden": undefined,
                                                              "niet_tevreden_anders": undefined,
                                                              "tevreden": undefined,
                                                              "tevreden_anders": undefined,
                                                              "text_extra": undefined,
                                                            },
                                                            "valueChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                          },
                                                          "_pendingChange": true,
                                                          "_pendingDirty": false,
                                                          "_pendingTouched": false,
                                                          "_pendingValue": undefined,
                                                          "asyncValidator": null,
                                                          "errors": Object {
                                                            "required": true,
                                                          },
                                                          "formState": undefined,
                                                          "get": [Function],
                                                          "getError": [Function],
                                                          "handler": [Function],
                                                          "hasError": [Function],
                                                          "meta": Object {
                                                            "className": "col-sm-12 col-md-8",
                                                            "ifAllOf": Object {
                                                              "is_satisfied": true,
                                                            },
                                                            "isVisible": true,
                                                            "label": "Waarom bent u tevreden?",
                                                            "name": "tevreden",
                                                            "subtitle": "Eén antwoord mogelijk, kies de belangrijkste reden.",
                                                            "values": Object {},
                                                          },
                                                          "onBlur": [Function],
                                                          "onBlurChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "onChange": [Function],
                                                          "onValueChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "patchValue": [Function],
                                                          "pristine": true,
                                                          "reset": [Function],
                                                          "setValue": [Function],
                                                          "stateChanges": Observable {
                                                            "observers": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "status": "INVALID",
                                                          "statusChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "submitted": false,
                                                          "touched": false,
                                                          "validator": [Function],
                                                          "validatorsOrOpts": Object {
                                                            "validators": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "value": undefined,
                                                          "valueChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                        }
                                                      }
                                                      render={[Function]}
                                                      strict={true}
                                                    >
                                                      <div
                                                        className=""
                                                      />
                                                    </Field>
                                                  </FieldControl>
                                                  <FieldControl
                                                    key="tevreden_anders"
                                                    meta={
                                                      Object {
                                                        "className": "col-sm-12 col-md-8 kto-form--collapse-to-previous-question",
                                                        "ifAllOf": Object {
                                                          "is_satisfied": true,
                                                          "tevreden": "anders",
                                                        },
                                                        "isVisible": false,
                                                        "name": "tevreden_anders",
                                                      }
                                                    }
                                                    name="tevreden_anders"
                                                    render={[Function]}
                                                    strict={true}
                                                  >
                                                    <Field
                                                      control={
                                                        FormControl {
                                                          "_onCollectionChange": [Function],
                                                          "_onDisabledChange": Array [],
                                                          "_parent": FormGroup {
                                                            "_onDisabledChange": Array [],
                                                            "_pendingChange": false,
                                                            "_pendingDirty": false,
                                                            "_pendingTouched": false,
                                                            "asyncValidator": null,
                                                            "controls": Object {
                                                              "allows_contact": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": null,
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8",
                                                                  "isVisible": true,
                                                                  "label": "Mogen wij contact met u opnemen naar aanleiding van uw feedback?",
                                                                  "name": "allows_contact",
                                                                  "value": "Ja",
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "VALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": null,
                                                                "validatorsOrOpts": undefined,
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "is_satisfied": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": null,
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "isVisible": true,
                                                                  "label": "Is tevreden?",
                                                                  "name": "is_satisfied",
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "VALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": null,
                                                                "validatorsOrOpts": undefined,
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "niet_tevreden": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": Object {
                                                                  "required": true,
                                                                },
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8",
                                                                  "ifAllOf": Object {
                                                                    "is_satisfied": false,
                                                                  },
                                                                  "isVisible": false,
                                                                  "label": "Waarom bent u ontevreden?",
                                                                  "name": "niet_tevreden",
                                                                  "subtitle": "Eén antwoord mogelijk, kies de belangrijkste reden.",
                                                                  "values": Object {},
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "INVALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": [Function],
                                                                "validatorsOrOpts": Object {
                                                                  "validators": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "niet_tevreden_anders": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": null,
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8 kto-form--collapse-to-previous-question",
                                                                  "ifAllOf": Object {
                                                                    "is_satisfied": false,
                                                                    "niet_tevreden": "anders",
                                                                  },
                                                                  "isVisible": false,
                                                                  "name": "niet_tevreden_anders",
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "VALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": null,
                                                                "validatorsOrOpts": undefined,
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "tevreden": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": Object {
                                                                  "required": true,
                                                                },
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8",
                                                                  "ifAllOf": Object {
                                                                    "is_satisfied": true,
                                                                  },
                                                                  "isVisible": true,
                                                                  "label": "Waarom bent u tevreden?",
                                                                  "name": "tevreden",
                                                                  "subtitle": "Eén antwoord mogelijk, kies de belangrijkste reden.",
                                                                  "values": Object {},
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "INVALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": [Function],
                                                                "validatorsOrOpts": Object {
                                                                  "validators": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "tevreden_anders": [Circular],
                                                              "text_extra": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": null,
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8",
                                                                  "isVisible": true,
                                                                  "label": "Wilt u verder nog iets vermelden of toelichten?",
                                                                  "maxLength": 1000,
                                                                  "name": "text_extra",
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "VALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": [Function],
                                                                "validatorsOrOpts": Object {
                                                                  "validators": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                            },
                                                            "errors": null,
                                                            "get": [Function],
                                                            "getError": [Function],
                                                            "handleSubmit": [Function],
                                                            "hasError": [Function],
                                                            "meta": Object {
                                                              "updateIncident": [Function],
                                                            },
                                                            "patchValue": [Function],
                                                            "pristine": true,
                                                            "reset": [Function],
                                                            "setValue": [Function],
                                                            "stateChanges": Observable {
                                                              "observers": Array [
                                                                [Function],
                                                                [Function],
                                                              ],
                                                            },
                                                            "status": "INVALID",
                                                            "statusChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                            "submitted": false,
                                                            "touched": false,
                                                            "validator": null,
                                                            "validatorOrOpts": undefined,
                                                            "value": Object {
                                                              "allows_contact": undefined,
                                                              "is_satisfied": undefined,
                                                              "niet_tevreden": undefined,
                                                              "niet_tevreden_anders": undefined,
                                                              "tevreden": undefined,
                                                              "tevreden_anders": undefined,
                                                              "text_extra": undefined,
                                                            },
                                                            "valueChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                          },
                                                          "_pendingChange": true,
                                                          "_pendingDirty": false,
                                                          "_pendingTouched": false,
                                                          "_pendingValue": undefined,
                                                          "asyncValidator": null,
                                                          "errors": null,
                                                          "formState": undefined,
                                                          "get": [Function],
                                                          "getError": [Function],
                                                          "handler": [Function],
                                                          "hasError": [Function],
                                                          "meta": Object {
                                                            "className": "col-sm-12 col-md-8 kto-form--collapse-to-previous-question",
                                                            "ifAllOf": Object {
                                                              "is_satisfied": true,
                                                              "tevreden": "anders",
                                                            },
                                                            "isVisible": false,
                                                            "name": "tevreden_anders",
                                                          },
                                                          "onBlur": [Function],
                                                          "onBlurChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "onChange": [Function],
                                                          "onValueChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "patchValue": [Function],
                                                          "pristine": true,
                                                          "reset": [Function],
                                                          "setValue": [Function],
                                                          "stateChanges": Observable {
                                                            "observers": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "status": "VALID",
                                                          "statusChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "submitted": false,
                                                          "touched": false,
                                                          "validator": null,
                                                          "validatorsOrOpts": undefined,
                                                          "value": undefined,
                                                          "valueChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                        }
                                                      }
                                                      render={[Function]}
                                                      strict={true}
                                                    >
                                                      <div
                                                        className=""
                                                      />
                                                    </Field>
                                                  </FieldControl>
                                                  <FieldControl
                                                    key="niet_tevreden"
                                                    meta={
                                                      Object {
                                                        "className": "col-sm-12 col-md-8",
                                                        "ifAllOf": Object {
                                                          "is_satisfied": false,
                                                        },
                                                        "isVisible": false,
                                                        "label": "Waarom bent u ontevreden?",
                                                        "name": "niet_tevreden",
                                                        "subtitle": "Eén antwoord mogelijk, kies de belangrijkste reden.",
                                                        "values": Object {},
                                                      }
                                                    }
                                                    name="niet_tevreden"
                                                    options={
                                                      Object {
                                                        "validators": Array [
                                                          [Function],
                                                        ],
                                                      }
                                                    }
                                                    render={[Function]}
                                                    strict={true}
                                                  >
                                                    <Field
                                                      control={
                                                        FormControl {
                                                          "_onCollectionChange": [Function],
                                                          "_onDisabledChange": Array [],
                                                          "_parent": FormGroup {
                                                            "_onDisabledChange": Array [],
                                                            "_pendingChange": false,
                                                            "_pendingDirty": false,
                                                            "_pendingTouched": false,
                                                            "asyncValidator": null,
                                                            "controls": Object {
                                                              "allows_contact": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": null,
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8",
                                                                  "isVisible": true,
                                                                  "label": "Mogen wij contact met u opnemen naar aanleiding van uw feedback?",
                                                                  "name": "allows_contact",
                                                                  "value": "Ja",
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "VALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": null,
                                                                "validatorsOrOpts": undefined,
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "is_satisfied": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": null,
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "isVisible": true,
                                                                  "label": "Is tevreden?",
                                                                  "name": "is_satisfied",
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "VALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": null,
                                                                "validatorsOrOpts": undefined,
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "niet_tevreden": [Circular],
                                                              "niet_tevreden_anders": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": null,
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8 kto-form--collapse-to-previous-question",
                                                                  "ifAllOf": Object {
                                                                    "is_satisfied": false,
                                                                    "niet_tevreden": "anders",
                                                                  },
                                                                  "isVisible": false,
                                                                  "name": "niet_tevreden_anders",
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "VALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": null,
                                                                "validatorsOrOpts": undefined,
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "tevreden": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": Object {
                                                                  "required": true,
                                                                },
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8",
                                                                  "ifAllOf": Object {
                                                                    "is_satisfied": true,
                                                                  },
                                                                  "isVisible": true,
                                                                  "label": "Waarom bent u tevreden?",
                                                                  "name": "tevreden",
                                                                  "subtitle": "Eén antwoord mogelijk, kies de belangrijkste reden.",
                                                                  "values": Object {},
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "INVALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": [Function],
                                                                "validatorsOrOpts": Object {
                                                                  "validators": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "tevreden_anders": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": null,
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8 kto-form--collapse-to-previous-question",
                                                                  "ifAllOf": Object {
                                                                    "is_satisfied": true,
                                                                    "tevreden": "anders",
                                                                  },
                                                                  "isVisible": false,
                                                                  "name": "tevreden_anders",
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "VALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": null,
                                                                "validatorsOrOpts": undefined,
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "text_extra": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": null,
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8",
                                                                  "isVisible": true,
                                                                  "label": "Wilt u verder nog iets vermelden of toelichten?",
                                                                  "maxLength": 1000,
                                                                  "name": "text_extra",
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "VALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": [Function],
                                                                "validatorsOrOpts": Object {
                                                                  "validators": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                            },
                                                            "errors": null,
                                                            "get": [Function],
                                                            "getError": [Function],
                                                            "handleSubmit": [Function],
                                                            "hasError": [Function],
                                                            "meta": Object {
                                                              "updateIncident": [Function],
                                                            },
                                                            "patchValue": [Function],
                                                            "pristine": true,
                                                            "reset": [Function],
                                                            "setValue": [Function],
                                                            "stateChanges": Observable {
                                                              "observers": Array [
                                                                [Function],
                                                                [Function],
                                                              ],
                                                            },
                                                            "status": "INVALID",
                                                            "statusChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                            "submitted": false,
                                                            "touched": false,
                                                            "validator": null,
                                                            "validatorOrOpts": undefined,
                                                            "value": Object {
                                                              "allows_contact": undefined,
                                                              "is_satisfied": undefined,
                                                              "niet_tevreden": undefined,
                                                              "niet_tevreden_anders": undefined,
                                                              "tevreden": undefined,
                                                              "tevreden_anders": undefined,
                                                              "text_extra": undefined,
                                                            },
                                                            "valueChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                          },
                                                          "_pendingChange": true,
                                                          "_pendingDirty": false,
                                                          "_pendingTouched": false,
                                                          "_pendingValue": undefined,
                                                          "asyncValidator": null,
                                                          "errors": Object {
                                                            "required": true,
                                                          },
                                                          "formState": undefined,
                                                          "get": [Function],
                                                          "getError": [Function],
                                                          "handler": [Function],
                                                          "hasError": [Function],
                                                          "meta": Object {
                                                            "className": "col-sm-12 col-md-8",
                                                            "ifAllOf": Object {
                                                              "is_satisfied": false,
                                                            },
                                                            "isVisible": false,
                                                            "label": "Waarom bent u ontevreden?",
                                                            "name": "niet_tevreden",
                                                            "subtitle": "Eén antwoord mogelijk, kies de belangrijkste reden.",
                                                            "values": Object {},
                                                          },
                                                          "onBlur": [Function],
                                                          "onBlurChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "onChange": [Function],
                                                          "onValueChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "patchValue": [Function],
                                                          "pristine": true,
                                                          "reset": [Function],
                                                          "setValue": [Function],
                                                          "stateChanges": Observable {
                                                            "observers": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "status": "INVALID",
                                                          "statusChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "submitted": false,
                                                          "touched": false,
                                                          "validator": [Function],
                                                          "validatorsOrOpts": Object {
                                                            "validators": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "value": undefined,
                                                          "valueChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                        }
                                                      }
                                                      render={[Function]}
                                                      strict={true}
                                                    >
                                                      <div
                                                        className=""
                                                      />
                                                    </Field>
                                                  </FieldControl>
                                                  <FieldControl
                                                    key="niet_tevreden_anders"
                                                    meta={
                                                      Object {
                                                        "className": "col-sm-12 col-md-8 kto-form--collapse-to-previous-question",
                                                        "ifAllOf": Object {
                                                          "is_satisfied": false,
                                                          "niet_tevreden": "anders",
                                                        },
                                                        "isVisible": false,
                                                        "name": "niet_tevreden_anders",
                                                      }
                                                    }
                                                    name="niet_tevreden_anders"
                                                    render={[Function]}
                                                    strict={true}
                                                  >
                                                    <Field
                                                      control={
                                                        FormControl {
                                                          "_onCollectionChange": [Function],
                                                          "_onDisabledChange": Array [],
                                                          "_parent": FormGroup {
                                                            "_onDisabledChange": Array [],
                                                            "_pendingChange": false,
                                                            "_pendingDirty": false,
                                                            "_pendingTouched": false,
                                                            "asyncValidator": null,
                                                            "controls": Object {
                                                              "allows_contact": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": null,
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8",
                                                                  "isVisible": true,
                                                                  "label": "Mogen wij contact met u opnemen naar aanleiding van uw feedback?",
                                                                  "name": "allows_contact",
                                                                  "value": "Ja",
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "VALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": null,
                                                                "validatorsOrOpts": undefined,
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "is_satisfied": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": null,
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "isVisible": true,
                                                                  "label": "Is tevreden?",
                                                                  "name": "is_satisfied",
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "VALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": null,
                                                                "validatorsOrOpts": undefined,
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "niet_tevreden": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": Object {
                                                                  "required": true,
                                                                },
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8",
                                                                  "ifAllOf": Object {
                                                                    "is_satisfied": false,
                                                                  },
                                                                  "isVisible": false,
                                                                  "label": "Waarom bent u ontevreden?",
                                                                  "name": "niet_tevreden",
                                                                  "subtitle": "Eén antwoord mogelijk, kies de belangrijkste reden.",
                                                                  "values": Object {},
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "INVALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": [Function],
                                                                "validatorsOrOpts": Object {
                                                                  "validators": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "niet_tevreden_anders": [Circular],
                                                              "tevreden": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": Object {
                                                                  "required": true,
                                                                },
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8",
                                                                  "ifAllOf": Object {
                                                                    "is_satisfied": true,
                                                                  },
                                                                  "isVisible": true,
                                                                  "label": "Waarom bent u tevreden?",
                                                                  "name": "tevreden",
                                                                  "subtitle": "Eén antwoord mogelijk, kies de belangrijkste reden.",
                                                                  "values": Object {},
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "INVALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": [Function],
                                                                "validatorsOrOpts": Object {
                                                                  "validators": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "tevreden_anders": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": null,
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8 kto-form--collapse-to-previous-question",
                                                                  "ifAllOf": Object {
                                                                    "is_satisfied": true,
                                                                    "tevreden": "anders",
                                                                  },
                                                                  "isVisible": false,
                                                                  "name": "tevreden_anders",
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "VALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": null,
                                                                "validatorsOrOpts": undefined,
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "text_extra": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": null,
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8",
                                                                  "isVisible": true,
                                                                  "label": "Wilt u verder nog iets vermelden of toelichten?",
                                                                  "maxLength": 1000,
                                                                  "name": "text_extra",
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "VALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": [Function],
                                                                "validatorsOrOpts": Object {
                                                                  "validators": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                            },
                                                            "errors": null,
                                                            "get": [Function],
                                                            "getError": [Function],
                                                            "handleSubmit": [Function],
                                                            "hasError": [Function],
                                                            "meta": Object {
                                                              "updateIncident": [Function],
                                                            },
                                                            "patchValue": [Function],
                                                            "pristine": true,
                                                            "reset": [Function],
                                                            "setValue": [Function],
                                                            "stateChanges": Observable {
                                                              "observers": Array [
                                                                [Function],
                                                                [Function],
                                                              ],
                                                            },
                                                            "status": "INVALID",
                                                            "statusChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                            "submitted": false,
                                                            "touched": false,
                                                            "validator": null,
                                                            "validatorOrOpts": undefined,
                                                            "value": Object {
                                                              "allows_contact": undefined,
                                                              "is_satisfied": undefined,
                                                              "niet_tevreden": undefined,
                                                              "niet_tevreden_anders": undefined,
                                                              "tevreden": undefined,
                                                              "tevreden_anders": undefined,
                                                              "text_extra": undefined,
                                                            },
                                                            "valueChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                          },
                                                          "_pendingChange": true,
                                                          "_pendingDirty": false,
                                                          "_pendingTouched": false,
                                                          "_pendingValue": undefined,
                                                          "asyncValidator": null,
                                                          "errors": null,
                                                          "formState": undefined,
                                                          "get": [Function],
                                                          "getError": [Function],
                                                          "handler": [Function],
                                                          "hasError": [Function],
                                                          "meta": Object {
                                                            "className": "col-sm-12 col-md-8 kto-form--collapse-to-previous-question",
                                                            "ifAllOf": Object {
                                                              "is_satisfied": false,
                                                              "niet_tevreden": "anders",
                                                            },
                                                            "isVisible": false,
                                                            "name": "niet_tevreden_anders",
                                                          },
                                                          "onBlur": [Function],
                                                          "onBlurChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "onChange": [Function],
                                                          "onValueChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "patchValue": [Function],
                                                          "pristine": true,
                                                          "reset": [Function],
                                                          "setValue": [Function],
                                                          "stateChanges": Observable {
                                                            "observers": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "status": "VALID",
                                                          "statusChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "submitted": false,
                                                          "touched": false,
                                                          "validator": null,
                                                          "validatorsOrOpts": undefined,
                                                          "value": undefined,
                                                          "valueChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                        }
                                                      }
                                                      render={[Function]}
                                                      strict={true}
                                                    >
                                                      <div
                                                        className=""
                                                      />
                                                    </Field>
                                                  </FieldControl>
                                                  <FieldControl
                                                    key="text_extra"
                                                    meta={
                                                      Object {
                                                        "className": "col-sm-12 col-md-8",
                                                        "isVisible": true,
                                                        "label": "Wilt u verder nog iets vermelden of toelichten?",
                                                        "maxLength": 1000,
                                                        "name": "text_extra",
                                                      }
                                                    }
                                                    name="text_extra"
                                                    options={
                                                      Object {
                                                        "validators": Array [
                                                          [Function],
                                                        ],
                                                      }
                                                    }
                                                    render={[Function]}
                                                    strict={true}
                                                  >
                                                    <Field
                                                      control={
                                                        FormControl {
                                                          "_onCollectionChange": [Function],
                                                          "_onDisabledChange": Array [],
                                                          "_parent": FormGroup {
                                                            "_onDisabledChange": Array [],
                                                            "_pendingChange": false,
                                                            "_pendingDirty": false,
                                                            "_pendingTouched": false,
                                                            "asyncValidator": null,
                                                            "controls": Object {
                                                              "allows_contact": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": null,
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8",
                                                                  "isVisible": true,
                                                                  "label": "Mogen wij contact met u opnemen naar aanleiding van uw feedback?",
                                                                  "name": "allows_contact",
                                                                  "value": "Ja",
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "VALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": null,
                                                                "validatorsOrOpts": undefined,
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "is_satisfied": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": null,
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "isVisible": true,
                                                                  "label": "Is tevreden?",
                                                                  "name": "is_satisfied",
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "VALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": null,
                                                                "validatorsOrOpts": undefined,
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "niet_tevreden": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": Object {
                                                                  "required": true,
                                                                },
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8",
                                                                  "ifAllOf": Object {
                                                                    "is_satisfied": false,
                                                                  },
                                                                  "isVisible": false,
                                                                  "label": "Waarom bent u ontevreden?",
                                                                  "name": "niet_tevreden",
                                                                  "subtitle": "Eén antwoord mogelijk, kies de belangrijkste reden.",
                                                                  "values": Object {},
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "INVALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": [Function],
                                                                "validatorsOrOpts": Object {
                                                                  "validators": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "niet_tevreden_anders": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": null,
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8 kto-form--collapse-to-previous-question",
                                                                  "ifAllOf": Object {
                                                                    "is_satisfied": false,
                                                                    "niet_tevreden": "anders",
                                                                  },
                                                                  "isVisible": false,
                                                                  "name": "niet_tevreden_anders",
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "VALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": null,
                                                                "validatorsOrOpts": undefined,
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "tevreden": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": Object {
                                                                  "required": true,
                                                                },
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8",
                                                                  "ifAllOf": Object {
                                                                    "is_satisfied": true,
                                                                  },
                                                                  "isVisible": true,
                                                                  "label": "Waarom bent u tevreden?",
                                                                  "name": "tevreden",
                                                                  "subtitle": "Eén antwoord mogelijk, kies de belangrijkste reden.",
                                                                  "values": Object {},
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "INVALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": [Function],
                                                                "validatorsOrOpts": Object {
                                                                  "validators": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "tevreden_anders": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": null,
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8 kto-form--collapse-to-previous-question",
                                                                  "ifAllOf": Object {
                                                                    "is_satisfied": true,
                                                                    "tevreden": "anders",
                                                                  },
                                                                  "isVisible": false,
                                                                  "name": "tevreden_anders",
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "VALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": null,
                                                                "validatorsOrOpts": undefined,
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "text_extra": [Circular],
                                                            },
                                                            "errors": null,
                                                            "get": [Function],
                                                            "getError": [Function],
                                                            "handleSubmit": [Function],
                                                            "hasError": [Function],
                                                            "meta": Object {
                                                              "updateIncident": [Function],
                                                            },
                                                            "patchValue": [Function],
                                                            "pristine": true,
                                                            "reset": [Function],
                                                            "setValue": [Function],
                                                            "stateChanges": Observable {
                                                              "observers": Array [
                                                                [Function],
                                                                [Function],
                                                              ],
                                                            },
                                                            "status": "INVALID",
                                                            "statusChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                            "submitted": false,
                                                            "touched": false,
                                                            "validator": null,
                                                            "validatorOrOpts": undefined,
                                                            "value": Object {
                                                              "allows_contact": undefined,
                                                              "is_satisfied": undefined,
                                                              "niet_tevreden": undefined,
                                                              "niet_tevreden_anders": undefined,
                                                              "tevreden": undefined,
                                                              "tevreden_anders": undefined,
                                                              "text_extra": undefined,
                                                            },
                                                            "valueChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                          },
                                                          "_pendingChange": true,
                                                          "_pendingDirty": false,
                                                          "_pendingTouched": false,
                                                          "_pendingValue": undefined,
                                                          "asyncValidator": null,
                                                          "errors": null,
                                                          "formState": undefined,
                                                          "get": [Function],
                                                          "getError": [Function],
                                                          "handler": [Function],
                                                          "hasError": [Function],
                                                          "meta": Object {
                                                            "className": "col-sm-12 col-md-8",
                                                            "isVisible": true,
                                                            "label": "Wilt u verder nog iets vermelden of toelichten?",
                                                            "maxLength": 1000,
                                                            "name": "text_extra",
                                                          },
                                                          "onBlur": [Function],
                                                          "onBlurChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "onChange": [Function],
                                                          "onValueChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "patchValue": [Function],
                                                          "pristine": true,
                                                          "reset": [Function],
                                                          "setValue": [Function],
                                                          "stateChanges": Observable {
                                                            "observers": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "status": "VALID",
                                                          "statusChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "submitted": false,
                                                          "touched": false,
                                                          "validator": [Function],
                                                          "validatorsOrOpts": Object {
                                                            "validators": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "value": undefined,
                                                          "valueChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                        }
                                                      }
                                                      render={[Function]}
                                                      strict={true}
                                                    >
                                                      <div
                                                        className="row"
                                                      >
                                                        <div
                                                          className="col-sm-12 col-md-8 mode_input"
                                                        >
                                                          <Header
                                                            getError={[Function]}
                                                            hasError={[Function]}
                                                            meta={
                                                              Object {
                                                                "className": "col-sm-12 col-md-8",
                                                                "isVisible": true,
                                                                "label": "Wilt u verder nog iets vermelden of toelichten?",
                                                                "maxLength": 1000,
                                                                "name": "text_extra",
                                                              }
                                                            }
                                                            options={
                                                              Object {
                                                                "validators": Array [
                                                                  [Function],
                                                                ],
                                                              }
                                                            }
                                                            touched={false}
                                                          >
                                                            <div
                                                              className="header "
                                                            >
                                                              <div
                                                                className="header__label"
                                                              >
                                                                Wilt u verder nog iets vermelden of toelichten?
                                                                <span
                                                                  className="header--not-required"
                                                                >
                                                                  (optioneel)
                                                                </span>
                                                              </div>
                                                              <div
                                                                className="header__subtitle"
                                                              />
                                                              <div
                                                                className="header__errors"
                                                              >
                                                                <div
                                                                  className="header__errors__item"
                                                                />
                                                                <div
                                                                  className="header__errors__item"
                                                                />
                                                                <div
                                                                  className="header__errors__item"
                                                                />
                                                                <div
                                                                  className="header__errors__item"
                                                                />
                                                              </div>
                                                              <div
                                                                className="header__children"
                                                              >
                                                                <div
                                                                  className="invoer"
                                                                >
                                                                  <textarea
                                                                    disabled={false}
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    value=""
                                                                  />
                                                                  <div
                                                                    className="input-help"
                                                                  >
                                                                    <span
                                                                      className="text-area-input__counter"
                                                                    >
                                                                      0/1000 tekens
                                                                    </span>
                                                                  </div>
                                                                </div>
                                                              </div>
                                                            </div>
                                                          </Header>
                                                        </div>
                                                      </div>
                                                    </Field>
                                                  </FieldControl>
                                                  <FieldControl
                                                    key="allows_contact"
                                                    meta={
                                                      Object {
                                                        "className": "col-sm-12 col-md-8",
                                                        "isVisible": true,
                                                        "label": "Mogen wij contact met u opnemen naar aanleiding van uw feedback?",
                                                        "name": "allows_contact",
                                                        "value": "Ja",
                                                      }
                                                    }
                                                    name="allows_contact"
                                                    render={[Function]}
                                                    strict={true}
                                                  >
                                                    <Field
                                                      control={
                                                        FormControl {
                                                          "_onCollectionChange": [Function],
                                                          "_onDisabledChange": Array [],
                                                          "_parent": FormGroup {
                                                            "_onDisabledChange": Array [],
                                                            "_pendingChange": false,
                                                            "_pendingDirty": false,
                                                            "_pendingTouched": false,
                                                            "asyncValidator": null,
                                                            "controls": Object {
                                                              "allows_contact": [Circular],
                                                              "is_satisfied": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": null,
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "isVisible": true,
                                                                  "label": "Is tevreden?",
                                                                  "name": "is_satisfied",
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "VALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": null,
                                                                "validatorsOrOpts": undefined,
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "niet_tevreden": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": Object {
                                                                  "required": true,
                                                                },
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8",
                                                                  "ifAllOf": Object {
                                                                    "is_satisfied": false,
                                                                  },
                                                                  "isVisible": false,
                                                                  "label": "Waarom bent u ontevreden?",
                                                                  "name": "niet_tevreden",
                                                                  "subtitle": "Eén antwoord mogelijk, kies de belangrijkste reden.",
                                                                  "values": Object {},
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "INVALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": [Function],
                                                                "validatorsOrOpts": Object {
                                                                  "validators": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "niet_tevreden_anders": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": null,
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8 kto-form--collapse-to-previous-question",
                                                                  "ifAllOf": Object {
                                                                    "is_satisfied": false,
                                                                    "niet_tevreden": "anders",
                                                                  },
                                                                  "isVisible": false,
                                                                  "name": "niet_tevreden_anders",
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "VALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": null,
                                                                "validatorsOrOpts": undefined,
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "tevreden": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": Object {
                                                                  "required": true,
                                                                },
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8",
                                                                  "ifAllOf": Object {
                                                                    "is_satisfied": true,
                                                                  },
                                                                  "isVisible": true,
                                                                  "label": "Waarom bent u tevreden?",
                                                                  "name": "tevreden",
                                                                  "subtitle": "Eén antwoord mogelijk, kies de belangrijkste reden.",
                                                                  "values": Object {},
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "INVALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": [Function],
                                                                "validatorsOrOpts": Object {
                                                                  "validators": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "tevreden_anders": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": null,
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8 kto-form--collapse-to-previous-question",
                                                                  "ifAllOf": Object {
                                                                    "is_satisfied": true,
                                                                    "tevreden": "anders",
                                                                  },
                                                                  "isVisible": false,
                                                                  "name": "tevreden_anders",
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "VALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": null,
                                                                "validatorsOrOpts": undefined,
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "text_extra": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": null,
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8",
                                                                  "isVisible": true,
                                                                  "label": "Wilt u verder nog iets vermelden of toelichten?",
                                                                  "maxLength": 1000,
                                                                  "name": "text_extra",
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "VALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": [Function],
                                                                "validatorsOrOpts": Object {
                                                                  "validators": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                            },
                                                            "errors": null,
                                                            "get": [Function],
                                                            "getError": [Function],
                                                            "handleSubmit": [Function],
                                                            "hasError": [Function],
                                                            "meta": Object {
                                                              "updateIncident": [Function],
                                                            },
                                                            "patchValue": [Function],
                                                            "pristine": true,
                                                            "reset": [Function],
                                                            "setValue": [Function],
                                                            "stateChanges": Observable {
                                                              "observers": Array [
                                                                [Function],
                                                                [Function],
                                                              ],
                                                            },
                                                            "status": "INVALID",
                                                            "statusChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                            "submitted": false,
                                                            "touched": false,
                                                            "validator": null,
                                                            "validatorOrOpts": undefined,
                                                            "value": Object {
                                                              "allows_contact": undefined,
                                                              "is_satisfied": undefined,
                                                              "niet_tevreden": undefined,
                                                              "niet_tevreden_anders": undefined,
                                                              "tevreden": undefined,
                                                              "tevreden_anders": undefined,
                                                              "text_extra": undefined,
                                                            },
                                                            "valueChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                          },
                                                          "_pendingChange": true,
                                                          "_pendingDirty": false,
                                                          "_pendingTouched": false,
                                                          "_pendingValue": undefined,
                                                          "asyncValidator": null,
                                                          "errors": null,
                                                          "formState": undefined,
                                                          "get": [Function],
                                                          "getError": [Function],
                                                          "handler": [Function],
                                                          "hasError": [Function],
                                                          "meta": Object {
                                                            "className": "col-sm-12 col-md-8",
                                                            "isVisible": true,
                                                            "label": "Mogen wij contact met u opnemen naar aanleiding van uw feedback?",
                                                            "name": "allows_contact",
                                                            "value": "Ja",
                                                          },
                                                          "onBlur": [Function],
                                                          "onBlurChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "onChange": [Function],
                                                          "onValueChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "patchValue": [Function],
                                                          "pristine": true,
                                                          "reset": [Function],
                                                          "setValue": [Function],
                                                          "stateChanges": Observable {
                                                            "observers": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "status": "VALID",
                                                          "statusChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "submitted": false,
                                                          "touched": false,
                                                          "validator": null,
                                                          "validatorsOrOpts": undefined,
                                                          "value": undefined,
                                                          "valueChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                        }
                                                      }
                                                      render={[Function]}
                                                      strict={true}
                                                    >
                                                      <div
                                                        className="row"
                                                      >
                                                        <div
                                                          className="col-sm-12 col-md-8 mode_input"
                                                        >
                                                          <Header
                                                            getError={[Function]}
                                                            hasError={[Function]}
                                                            meta={
                                                              Object {
                                                                "className": "col-sm-12 col-md-8",
                                                                "isVisible": true,
                                                                "label": "Mogen wij contact met u opnemen naar aanleiding van uw feedback?",
                                                                "name": "allows_contact",
                                                                "value": "Ja",
                                                              }
                                                            }
                                                            touched={false}
                                                          >
                                                            <div
                                                              className="header "
                                                            >
                                                              <div
                                                                className="header__label"
                                                              >
                                                                Mogen wij contact met u opnemen naar aanleiding van uw feedback?
                                                                <span
                                                                  className="header--not-required"
                                                                >
                                                                  (optioneel)
                                                                </span>
                                                              </div>
                                                              <div
                                                                className="header__subtitle"
                                                              />
                                                              <div
                                                                className="header__errors"
                                                              >
                                                                <div
                                                                  className="header__errors__item"
                                                                />
                                                                <div
                                                                  className="header__errors__item"
                                                                />
                                                                <div
                                                                  className="header__errors__item"
                                                                />
                                                                <div
                                                                  className="header__errors__item"
                                                                />
                                                              </div>
                                                              <div
                                                                className="header__children"
                                                              >
                                                                <div
                                                                  className="antwoorden"
                                                                >
                                                                  <div
                                                                    className="antwoord"
                                                                  >
                                                                    <input
                                                                      id="allows_contact"
                                                                      name="allows_contact"
                                                                      onClick={[Function]}
                                                                      type="checkbox"
                                                                    />
                                                                    <label
                                                                      htmlFor="allows_contact"
                                                                    >
                                                                      Ja
                                                                    </label>
                                                                  </div>
                                                                </div>
                                                              </div>
                                                            </div>
                                                          </Header>
                                                        </div>
                                                      </div>
                                                    </Field>
                                                  </FieldControl>
                                                  <FieldControl
                                                    key="is_satisfied"
                                                    meta={
                                                      Object {
                                                        "isVisible": true,
                                                        "label": "Is tevreden?",
                                                        "name": "is_satisfied",
                                                      }
                                                    }
                                                    name="is_satisfied"
                                                    render={[Function]}
                                                    strict={true}
                                                  >
                                                    <Field
                                                      control={
                                                        FormControl {
                                                          "_onCollectionChange": [Function],
                                                          "_onDisabledChange": Array [],
                                                          "_parent": FormGroup {
                                                            "_onDisabledChange": Array [],
                                                            "_pendingChange": false,
                                                            "_pendingDirty": false,
                                                            "_pendingTouched": false,
                                                            "asyncValidator": null,
                                                            "controls": Object {
                                                              "allows_contact": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": null,
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8",
                                                                  "isVisible": true,
                                                                  "label": "Mogen wij contact met u opnemen naar aanleiding van uw feedback?",
                                                                  "name": "allows_contact",
                                                                  "value": "Ja",
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "VALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": null,
                                                                "validatorsOrOpts": undefined,
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "is_satisfied": [Circular],
                                                              "niet_tevreden": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": Object {
                                                                  "required": true,
                                                                },
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8",
                                                                  "ifAllOf": Object {
                                                                    "is_satisfied": false,
                                                                  },
                                                                  "isVisible": false,
                                                                  "label": "Waarom bent u ontevreden?",
                                                                  "name": "niet_tevreden",
                                                                  "subtitle": "Eén antwoord mogelijk, kies de belangrijkste reden.",
                                                                  "values": Object {},
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "INVALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": [Function],
                                                                "validatorsOrOpts": Object {
                                                                  "validators": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "niet_tevreden_anders": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": null,
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8 kto-form--collapse-to-previous-question",
                                                                  "ifAllOf": Object {
                                                                    "is_satisfied": false,
                                                                    "niet_tevreden": "anders",
                                                                  },
                                                                  "isVisible": false,
                                                                  "name": "niet_tevreden_anders",
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "VALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": null,
                                                                "validatorsOrOpts": undefined,
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "tevreden": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": Object {
                                                                  "required": true,
                                                                },
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8",
                                                                  "ifAllOf": Object {
                                                                    "is_satisfied": true,
                                                                  },
                                                                  "isVisible": true,
                                                                  "label": "Waarom bent u tevreden?",
                                                                  "name": "tevreden",
                                                                  "subtitle": "Eén antwoord mogelijk, kies de belangrijkste reden.",
                                                                  "values": Object {},
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "INVALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": [Function],
                                                                "validatorsOrOpts": Object {
                                                                  "validators": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "tevreden_anders": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": null,
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8 kto-form--collapse-to-previous-question",
                                                                  "ifAllOf": Object {
                                                                    "is_satisfied": true,
                                                                    "tevreden": "anders",
                                                                  },
                                                                  "isVisible": false,
                                                                  "name": "tevreden_anders",
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "VALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": null,
                                                                "validatorsOrOpts": undefined,
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                              "text_extra": FormControl {
                                                                "_onCollectionChange": [Function],
                                                                "_onDisabledChange": Array [],
                                                                "_parent": [Circular],
                                                                "_pendingChange": true,
                                                                "_pendingDirty": false,
                                                                "_pendingTouched": false,
                                                                "_pendingValue": undefined,
                                                                "asyncValidator": null,
                                                                "errors": null,
                                                                "formState": undefined,
                                                                "get": [Function],
                                                                "getError": [Function],
                                                                "handler": [Function],
                                                                "hasError": [Function],
                                                                "meta": Object {
                                                                  "className": "col-sm-12 col-md-8",
                                                                  "isVisible": true,
                                                                  "label": "Wilt u verder nog iets vermelden of toelichten?",
                                                                  "maxLength": 1000,
                                                                  "name": "text_extra",
                                                                },
                                                                "onBlur": [Function],
                                                                "onBlurChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "onChange": [Function],
                                                                "onValueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "patchValue": [Function],
                                                                "pristine": true,
                                                                "reset": [Function],
                                                                "setValue": [Function],
                                                                "stateChanges": Observable {
                                                                  "observers": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "status": "VALID",
                                                                "statusChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                                "submitted": false,
                                                                "touched": false,
                                                                "validator": [Function],
                                                                "validatorsOrOpts": Object {
                                                                  "validators": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "value": undefined,
                                                                "valueChanges": Observable {
                                                                  "observers": Array [],
                                                                },
                                                              },
                                                            },
                                                            "errors": null,
                                                            "get": [Function],
                                                            "getError": [Function],
                                                            "handleSubmit": [Function],
                                                            "hasError": [Function],
                                                            "meta": Object {
                                                              "updateIncident": [Function],
                                                            },
                                                            "patchValue": [Function],
                                                            "pristine": true,
                                                            "reset": [Function],
                                                            "setValue": [Function],
                                                            "stateChanges": Observable {
                                                              "observers": Array [
                                                                [Function],
                                                                [Function],
                                                              ],
                                                            },
                                                            "status": "INVALID",
                                                            "statusChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                            "submitted": false,
                                                            "touched": false,
                                                            "validator": null,
                                                            "validatorOrOpts": undefined,
                                                            "value": Object {
                                                              "allows_contact": undefined,
                                                              "is_satisfied": undefined,
                                                              "niet_tevreden": undefined,
                                                              "niet_tevreden_anders": undefined,
                                                              "tevreden": undefined,
                                                              "tevreden_anders": undefined,
                                                              "text_extra": undefined,
                                                            },
                                                            "valueChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                          },
                                                          "_pendingChange": true,
                                                          "_pendingDirty": false,
                                                          "_pendingTouched": false,
                                                          "_pendingValue": undefined,
                                                          "asyncValidator": null,
                                                          "errors": null,
                                                          "formState": undefined,
                                                          "get": [Function],
                                                          "getError": [Function],
                                                          "handler": [Function],
                                                          "hasError": [Function],
                                                          "meta": Object {
                                                            "isVisible": true,
                                                            "label": "Is tevreden?",
                                                            "name": "is_satisfied",
                                                          },
                                                          "onBlur": [Function],
                                                          "onBlurChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "onChange": [Function],
                                                          "onValueChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "patchValue": [Function],
                                                          "pristine": true,
                                                          "reset": [Function],
                                                          "setValue": [Function],
                                                          "stateChanges": Observable {
                                                            "observers": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "status": "VALID",
                                                          "statusChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                          "submitted": false,
                                                          "touched": false,
                                                          "validator": null,
                                                          "validatorsOrOpts": undefined,
                                                          "value": undefined,
                                                          "valueChanges": Observable {
                                                            "observers": Array [],
                                                          },
                                                        }
                                                      }
                                                      render={[Function]}
                                                      strict={true}
                                                    >
                                                      <div>
                                                        <input
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          type="hidden"
                                                          value=""
                                                        />
                                                      </div>
                                                    </Field>
                                                  </FieldControl>
                                                  <Field
                                                    control={
                                                      FormGroup {
                                                        "_onDisabledChange": Array [],
                                                        "_pendingChange": false,
                                                        "_pendingDirty": false,
                                                        "_pendingTouched": false,
                                                        "asyncValidator": null,
                                                        "controls": Object {
                                                          "allows_contact": FormControl {
                                                            "_onCollectionChange": [Function],
                                                            "_onDisabledChange": Array [],
                                                            "_parent": [Circular],
                                                            "_pendingChange": true,
                                                            "_pendingDirty": false,
                                                            "_pendingTouched": false,
                                                            "_pendingValue": undefined,
                                                            "asyncValidator": null,
                                                            "errors": null,
                                                            "formState": undefined,
                                                            "get": [Function],
                                                            "getError": [Function],
                                                            "handler": [Function],
                                                            "hasError": [Function],
                                                            "meta": Object {
                                                              "className": "col-sm-12 col-md-8",
                                                              "isVisible": true,
                                                              "label": "Mogen wij contact met u opnemen naar aanleiding van uw feedback?",
                                                              "name": "allows_contact",
                                                              "value": "Ja",
                                                            },
                                                            "onBlur": [Function],
                                                            "onBlurChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                            "onChange": [Function],
                                                            "onValueChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                            "patchValue": [Function],
                                                            "pristine": true,
                                                            "reset": [Function],
                                                            "setValue": [Function],
                                                            "stateChanges": Observable {
                                                              "observers": Array [
                                                                [Function],
                                                              ],
                                                            },
                                                            "status": "VALID",
                                                            "statusChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                            "submitted": false,
                                                            "touched": false,
                                                            "validator": null,
                                                            "validatorsOrOpts": undefined,
                                                            "value": undefined,
                                                            "valueChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                          },
                                                          "is_satisfied": FormControl {
                                                            "_onCollectionChange": [Function],
                                                            "_onDisabledChange": Array [],
                                                            "_parent": [Circular],
                                                            "_pendingChange": true,
                                                            "_pendingDirty": false,
                                                            "_pendingTouched": false,
                                                            "_pendingValue": undefined,
                                                            "asyncValidator": null,
                                                            "errors": null,
                                                            "formState": undefined,
                                                            "get": [Function],
                                                            "getError": [Function],
                                                            "handler": [Function],
                                                            "hasError": [Function],
                                                            "meta": Object {
                                                              "isVisible": true,
                                                              "label": "Is tevreden?",
                                                              "name": "is_satisfied",
                                                            },
                                                            "onBlur": [Function],
                                                            "onBlurChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                            "onChange": [Function],
                                                            "onValueChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                            "patchValue": [Function],
                                                            "pristine": true,
                                                            "reset": [Function],
                                                            "setValue": [Function],
                                                            "stateChanges": Observable {
                                                              "observers": Array [
                                                                [Function],
                                                              ],
                                                            },
                                                            "status": "VALID",
                                                            "statusChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                            "submitted": false,
                                                            "touched": false,
                                                            "validator": null,
                                                            "validatorsOrOpts": undefined,
                                                            "value": undefined,
                                                            "valueChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                          },
                                                          "niet_tevreden": FormControl {
                                                            "_onCollectionChange": [Function],
                                                            "_onDisabledChange": Array [],
                                                            "_parent": [Circular],
                                                            "_pendingChange": true,
                                                            "_pendingDirty": false,
                                                            "_pendingTouched": false,
                                                            "_pendingValue": undefined,
                                                            "asyncValidator": null,
                                                            "errors": Object {
                                                              "required": true,
                                                            },
                                                            "formState": undefined,
                                                            "get": [Function],
                                                            "getError": [Function],
                                                            "handler": [Function],
                                                            "hasError": [Function],
                                                            "meta": Object {
                                                              "className": "col-sm-12 col-md-8",
                                                              "ifAllOf": Object {
                                                                "is_satisfied": false,
                                                              },
                                                              "isVisible": false,
                                                              "label": "Waarom bent u ontevreden?",
                                                              "name": "niet_tevreden",
                                                              "subtitle": "Eén antwoord mogelijk, kies de belangrijkste reden.",
                                                              "values": Object {},
                                                            },
                                                            "onBlur": [Function],
                                                            "onBlurChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                            "onChange": [Function],
                                                            "onValueChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                            "patchValue": [Function],
                                                            "pristine": true,
                                                            "reset": [Function],
                                                            "setValue": [Function],
                                                            "stateChanges": Observable {
                                                              "observers": Array [
                                                                [Function],
                                                              ],
                                                            },
                                                            "status": "INVALID",
                                                            "statusChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                            "submitted": false,
                                                            "touched": false,
                                                            "validator": [Function],
                                                            "validatorsOrOpts": Object {
                                                              "validators": Array [
                                                                [Function],
                                                              ],
                                                            },
                                                            "value": undefined,
                                                            "valueChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                          },
                                                          "niet_tevreden_anders": FormControl {
                                                            "_onCollectionChange": [Function],
                                                            "_onDisabledChange": Array [],
                                                            "_parent": [Circular],
                                                            "_pendingChange": true,
                                                            "_pendingDirty": false,
                                                            "_pendingTouched": false,
                                                            "_pendingValue": undefined,
                                                            "asyncValidator": null,
                                                            "errors": null,
                                                            "formState": undefined,
                                                            "get": [Function],
                                                            "getError": [Function],
                                                            "handler": [Function],
                                                            "hasError": [Function],
                                                            "meta": Object {
                                                              "className": "col-sm-12 col-md-8 kto-form--collapse-to-previous-question",
                                                              "ifAllOf": Object {
                                                                "is_satisfied": false,
                                                                "niet_tevreden": "anders",
                                                              },
                                                              "isVisible": false,
                                                              "name": "niet_tevreden_anders",
                                                            },
                                                            "onBlur": [Function],
                                                            "onBlurChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                            "onChange": [Function],
                                                            "onValueChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                            "patchValue": [Function],
                                                            "pristine": true,
                                                            "reset": [Function],
                                                            "setValue": [Function],
                                                            "stateChanges": Observable {
                                                              "observers": Array [
                                                                [Function],
                                                              ],
                                                            },
                                                            "status": "VALID",
                                                            "statusChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                            "submitted": false,
                                                            "touched": false,
                                                            "validator": null,
                                                            "validatorsOrOpts": undefined,
                                                            "value": undefined,
                                                            "valueChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                          },
                                                          "tevreden": FormControl {
                                                            "_onCollectionChange": [Function],
                                                            "_onDisabledChange": Array [],
                                                            "_parent": [Circular],
                                                            "_pendingChange": true,
                                                            "_pendingDirty": false,
                                                            "_pendingTouched": false,
                                                            "_pendingValue": undefined,
                                                            "asyncValidator": null,
                                                            "errors": Object {
                                                              "required": true,
                                                            },
                                                            "formState": undefined,
                                                            "get": [Function],
                                                            "getError": [Function],
                                                            "handler": [Function],
                                                            "hasError": [Function],
                                                            "meta": Object {
                                                              "className": "col-sm-12 col-md-8",
                                                              "ifAllOf": Object {
                                                                "is_satisfied": true,
                                                              },
                                                              "isVisible": true,
                                                              "label": "Waarom bent u tevreden?",
                                                              "name": "tevreden",
                                                              "subtitle": "Eén antwoord mogelijk, kies de belangrijkste reden.",
                                                              "values": Object {},
                                                            },
                                                            "onBlur": [Function],
                                                            "onBlurChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                            "onChange": [Function],
                                                            "onValueChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                            "patchValue": [Function],
                                                            "pristine": true,
                                                            "reset": [Function],
                                                            "setValue": [Function],
                                                            "stateChanges": Observable {
                                                              "observers": Array [
                                                                [Function],
                                                              ],
                                                            },
                                                            "status": "INVALID",
                                                            "statusChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                            "submitted": false,
                                                            "touched": false,
                                                            "validator": [Function],
                                                            "validatorsOrOpts": Object {
                                                              "validators": Array [
                                                                [Function],
                                                              ],
                                                            },
                                                            "value": undefined,
                                                            "valueChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                          },
                                                          "tevreden_anders": FormControl {
                                                            "_onCollectionChange": [Function],
                                                            "_onDisabledChange": Array [],
                                                            "_parent": [Circular],
                                                            "_pendingChange": true,
                                                            "_pendingDirty": false,
                                                            "_pendingTouched": false,
                                                            "_pendingValue": undefined,
                                                            "asyncValidator": null,
                                                            "errors": null,
                                                            "formState": undefined,
                                                            "get": [Function],
                                                            "getError": [Function],
                                                            "handler": [Function],
                                                            "hasError": [Function],
                                                            "meta": Object {
                                                              "className": "col-sm-12 col-md-8 kto-form--collapse-to-previous-question",
                                                              "ifAllOf": Object {
                                                                "is_satisfied": true,
                                                                "tevreden": "anders",
                                                              },
                                                              "isVisible": false,
                                                              "name": "tevreden_anders",
                                                            },
                                                            "onBlur": [Function],
                                                            "onBlurChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                            "onChange": [Function],
                                                            "onValueChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                            "patchValue": [Function],
                                                            "pristine": true,
                                                            "reset": [Function],
                                                            "setValue": [Function],
                                                            "stateChanges": Observable {
                                                              "observers": Array [
                                                                [Function],
                                                              ],
                                                            },
                                                            "status": "VALID",
                                                            "statusChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                            "submitted": false,
                                                            "touched": false,
                                                            "validator": null,
                                                            "validatorsOrOpts": undefined,
                                                            "value": undefined,
                                                            "valueChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                          },
                                                          "text_extra": FormControl {
                                                            "_onCollectionChange": [Function],
                                                            "_onDisabledChange": Array [],
                                                            "_parent": [Circular],
                                                            "_pendingChange": true,
                                                            "_pendingDirty": false,
                                                            "_pendingTouched": false,
                                                            "_pendingValue": undefined,
                                                            "asyncValidator": null,
                                                            "errors": null,
                                                            "formState": undefined,
                                                            "get": [Function],
                                                            "getError": [Function],
                                                            "handler": [Function],
                                                            "hasError": [Function],
                                                            "meta": Object {
                                                              "className": "col-sm-12 col-md-8",
                                                              "isVisible": true,
                                                              "label": "Wilt u verder nog iets vermelden of toelichten?",
                                                              "maxLength": 1000,
                                                              "name": "text_extra",
                                                            },
                                                            "onBlur": [Function],
                                                            "onBlurChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                            "onChange": [Function],
                                                            "onValueChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                            "patchValue": [Function],
                                                            "pristine": true,
                                                            "reset": [Function],
                                                            "setValue": [Function],
                                                            "stateChanges": Observable {
                                                              "observers": Array [
                                                                [Function],
                                                              ],
                                                            },
                                                            "status": "VALID",
                                                            "statusChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                            "submitted": false,
                                                            "touched": false,
                                                            "validator": [Function],
                                                            "validatorsOrOpts": Object {
                                                              "validators": Array [
                                                                [Function],
                                                              ],
                                                            },
                                                            "value": undefined,
                                                            "valueChanges": Observable {
                                                              "observers": Array [],
                                                            },
                                                          },
                                                        },
                                                        "errors": null,
                                                        "get": [Function],
                                                        "getError": [Function],
                                                        "handleSubmit": [Function],
                                                        "hasError": [Function],
                                                        "meta": Object {
                                                          "updateIncident": [Function],
                                                        },
                                                        "patchValue": [Function],
                                                        "pristine": true,
                                                        "reset": [Function],
                                                        "setValue": [Function],
                                                        "stateChanges": Observable {
                                                          "observers": Array [
                                                            [Function],
                                                            [Function],
                                                          ],
                                                        },
                                                        "status": "INVALID",
                                                        "statusChanges": Observable {
                                                          "observers": Array [],
                                                        },
                                                        "submitted": false,
                                                        "touched": false,
                                                        "validator": null,
                                                        "validatorOrOpts": undefined,
                                                        "value": Object {
                                                          "allows_contact": undefined,
                                                          "is_satisfied": undefined,
                                                          "niet_tevreden": undefined,
                                                          "niet_tevreden_anders": undefined,
                                                          "tevreden": undefined,
                                                          "tevreden_anders": undefined,
                                                          "text_extra": undefined,
                                                        },
                                                        "valueChanges": Observable {
                                                          "observers": Array [],
                                                        },
                                                      }
                                                    }
                                                    key="$field_0"
                                                    name="$field_0"
                                                    render={[Function]}
                                                    strict={true}
                                                  >
                                                    <div>
                                                      <button
                                                        className="kto-form__submit action primary disabled"
                                                        disabled={true}
                                                        type="submit"
                                                      >
                                                        Verstuur
                                                      </button>
                                                    </div>
                                                  </Field>
                                                </Field>
                                              </FieldGroup>
                                            </FormGenerator>
                                          </form>
                                        </div>
                                      </KtoForm>
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </KtoContainer>
                      </Connect(KtoContainer)>
                    </withSaga(Connect(KtoContainer))>
                  </withReducer(withSaga(Connect(KtoContainer)))>
                </component>
              </Route>
            </Switch>
          </div>
          <div
            className="container-fluid"
          >
            <Footer>
              <div
                className="footer-wrapper no-print"
              >
                <div
                  className="row bg-darkgrey footer"
                >
                  <footer
                    className="container footer-component"
                  >
                    <div
                      className="row"
                    >
                      <div
                        className="col-12"
                      >
                        <h2>
                          Lukt het niet om een melding te doen?
                        </h2>
                        <p>
                          Bel het Gemeentelijk informatienummer: 14 020 
                          <br />
                          op werkdagen van 08.00 tot 18.00 uur.
                        </p>
                      </div>
                    </div>
                  </footer>
                </div>
                <div
                  className="container grid-below-footer"
                >
                  <div
                    className="row"
                  >
                    <div
                      className="col-12"
                    >
                      <nav>
                        <ul
                          className="links horizontal left"
                        >
                          <li>
                            <a
                              href="https://www.amsterdam.nl/privacy/"
                            >
                              <span
                                className="linklabel"
                              >
                                Privacy
                              </span>
                            </a>
                          </li>
                        </ul>
                      </nav>
                    </div>
                  </div>
                </div>
              </div>
            </Footer>
          </div>
        </div>
      </App>
    </Router>
  </MemoryRouter>
</Provider>
`;
