// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<IncidentManagementModule /> routing can navigate to incident detail 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "injectedReducers": Object {},
      "injectedSagas": Object {},
      "replaceReducer": [Function],
      "runSaga": [Function],
      "subscribe": [Function],
      Symbol(Symbol.observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        "/manage/incident/666",
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "pathname": "/manage/incident/666",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/manage/incident/666",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <IncidentManagementModule
        isAuthenticated={true}
        match={
          Object {
            "isExact": false,
            "params": Object {},
            "path": "/manage",
            "url": "/manage",
          }
        }
      >
        <div
          className="manage-incident"
        >
          <div
            className="row"
          >
            <div
              className="col-12"
            >
              <Route
                exact={true}
                path="/manage/incidents"
                render={[Function]}
              />
              <Route
                exact={true}
                path="/manage/incident/:id"
                render={[Function]}
              >
                <Component
                  baseUrl="/manage"
                  id="666"
                >
                  IncidentDetailPage
                </Component>
              </Route>
            </div>
          </div>
        </div>
      </IncidentManagementModule>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`<IncidentManagementModule /> routing can navigate to incident list 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "injectedReducers": Object {},
      "injectedSagas": Object {},
      "replaceReducer": [Function],
      "runSaga": [Function],
      "subscribe": [Function],
      Symbol(Symbol.observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        "/manage/incidents",
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "pathname": "/manage/incidents",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/manage/incidents",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <IncidentManagementModule
        isAuthenticated={true}
        match={
          Object {
            "isExact": false,
            "params": Object {},
            "path": "/manage",
            "url": "/manage",
          }
        }
      >
        <div
          className="manage-incident"
        >
          <div
            className="row"
          >
            <div
              className="col-12"
            >
              <Route
                exact={true}
                path="/manage/incidents"
                render={[Function]}
              >
                <Component
                  baseUrl="/manage"
                >
                  IncidentOverviewPage
                </Component>
              </Route>
              <Route
                exact={true}
                path="/manage/incident/:id"
                render={[Function]}
              />
            </div>
          </div>
        </div>
      </IncidentManagementModule>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`<IncidentManagementModule /> should render correctly when authenticated 1`] = `
<div
  className="manage-incident"
>
  <div
    className="row"
  >
    <div
      className="col-12"
    >
      <Route
        exact={true}
        path="/manage/incidents"
        render={[Function]}
      />
      <Route
        exact={true}
        path="/manage/incident/:id"
        render={[Function]}
      />
    </div>
  </div>
</div>
`;

exports[`<IncidentManagementModule /> should render correctly when not authenticated 1`] = `
<div
  className="manage-incident"
>
  <Route
    component={[Function]}
  />
</div>
`;
