// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Form component <FileInput /> rendering should render no upload field when not visible 1`] = `""`;

exports[`Form component <FileInput /> rendering should render upload field correctly 1`] = `
<Fragment>
  <Header
    className=""
    getError={[MockFunction]}
    hasError={[MockFunction]}
    meta={
      Object {
        "isVisible": true,
        "maxNumberOfFiles": 3,
        "name": "input-field-name",
      }
    }
    touched={false}
  >
    <div
      className="file-input"
    >
      <div
        className="file-input__button"
      >
        <label
          className="file-input__button-label"
          htmlFor="formUpload"
        >
          <div
            className="file-input__button-label-icon"
          />
        </label>
        <input
          id="formUpload"
          multiple={true}
          onChange={[Function]}
          type="file"
        />
      </div>
      <div
        className="file-input__empty"
        key="0"
      >
         
      </div>
      <div
        className="file-input__empty"
        key="1"
      >
         
      </div>
    </div>
  </Header>
</Fragment>
`;

exports[`Form component <FileInput /> rendering should render upload field with multiple errors correctly 1`] = `
<Fragment>
  <Header
    className=""
    getError={[MockFunction]}
    hasError={[MockFunction]}
    meta={
      Object {
        "isVisible": true,
        "maxNumberOfFiles": 3,
        "name": "input-field-name",
      }
    }
    touched={false}
  >
    <div
      className="file-input"
    >
      <div
        className="file-input__button"
      >
        <label
          className="file-input__button-label"
          htmlFor="formUpload"
        >
          <div
            className="file-input__button-label-icon"
          />
        </label>
        <input
          id="formUpload"
          multiple={true}
          onChange={[Function]}
          type="file"
        />
      </div>
      <div
        className="file-input__empty"
        key="0"
      >
         
      </div>
      <div
        className="file-input__empty"
        key="1"
      >
         
      </div>
    </div>
  </Header>
  <div
    className="file-input__error"
    key="Dit bestand is te groot. De maximale bestandgrootte is 976,6 kB."
  >
    Dit bestand is te groot. De maximale bestandgrootte is 976,6 kB.
  </div>
  <div
    className="file-input__error"
    key="Dit bestandstype wordt niet ondersteund. Toegestaan zijn: jpeg."
  >
    Dit bestandstype wordt niet ondersteund. Toegestaan zijn: jpeg.
  </div>
  <div
    className="file-input__error"
    key="U kunt maximaal 3 bestanden uploaden."
  >
    U kunt maximaal 3 bestanden uploaden.
  </div>
</Fragment>
`;

exports[`Form component <FileInput /> rendering should render upload field with one uploaded file and one loading correctly 1`] = `
<Fragment>
  <Header
    className=""
    getError={[MockFunction]}
    hasError={[MockFunction]}
    meta={
      Object {
        "isVisible": true,
        "maxNumberOfFiles": 2,
        "name": "input-field-name",
      }
    }
    touched={false}
  >
    <div
      className="file-input"
    >
      <div
        className="file-input__preview "
        key="blob:http://host/c00d2e14-ae1c-4bb3-b67c-86ea93130b1c"
      >
        <div
          className="file-input__preview-image"
          style={
            Object {
              "backgroundImage": "URL(blob:http://host/c00d2e14-ae1c-4bb3-b67c-86ea93130b1c)",
            }
          }
        >
          <button
            aria-label="Verwijder deze foto"
            className="file-input__preview-button-delete"
            onClick={[Function]}
            type="button"
          />
        </div>
      </div>
      <div
        className="file-input__preview file-input__preview--loading"
        key="loading-42"
      >
        <div
          className="progress-indicator progress-red"
        />
      </div>
    </div>
  </Header>
</Fragment>
`;
