// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Form component <DescriptionWithClassificationInput /> rendering should render classification text area field correctly 1`] = `
<Header
  className=""
  getError={[MockFunction]}
  hasError={[MockFunction]}
  meta={
    Object {
      "isVisible": true,
      "name": "input-field-name",
      "placeholder": "type here",
    }
  }
  touched={false}
>
  <ForwardRef
    helpText={false}
    onBlur={[Function]}
    placeholder="type here"
    rows={6}
  />
</Header>
`;

exports[`Form component <DescriptionWithClassificationInput /> rendering should render no classification text area field when not visible 1`] = `""`;

exports[`Form component <DescriptionWithClassificationInput /> rendering should render with a character counter when maxLength is supplied correctly 1`] = `
<Header
  className=""
  getError={[MockFunction]}
  hasError={[MockFunction]}
  meta={
    Object {
      "isVisible": true,
      "maxLength": 3000,
      "name": "input-field-name",
      "placeholder": "type here",
    }
  }
  touched={false}
>
  <ForwardRef
    helpText="0/3000 tekens"
    onBlur={[Function]}
    placeholder="type here"
    rows={6}
  />
</Header>
`;

exports[`Form component <DescriptionWithClassificationInput /> rendering should render with a character counter with value correctly 1`] = `
<Header
  className=""
  getError={[MockFunction]}
  hasError={[MockFunction]}
  meta={
    Object {
      "isVisible": true,
      "maxLength": 3000,
      "name": "input-field-name",
      "placeholder": "type here",
    }
  }
  touched={false}
>
  <ForwardRef
    helpText="4/3000 tekens"
    onBlur={[Function]}
    placeholder="type here"
    rows={6}
  />
</Header>
`;
