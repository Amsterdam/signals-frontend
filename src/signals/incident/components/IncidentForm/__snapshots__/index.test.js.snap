// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<IncidentForm /> rendering expect to render correctly 1`] = `
<IncidentForm
  createIncident={[MockFunction]}
  fieldConfig={
    Object {
      "controls": Object {},
    }
  }
  getClassification={[MockFunction]}
  incidentContainer={
    Object {
      "incident": Object {},
    }
  }
  isAuthenticated={false}
  updateIncident={[MockFunction]}
  wizard={Object {}}
>
  <div
    className="incident-form"
  >
    <form
      onSubmit={[Function]}
    >
      <FormGenerator
        fieldConfig={
          Object {
            "controls": Object {
              "extra_boten_geluid_meer": Object {
                "meta": Object {
                  "isVisible": false,
                  "label": "Zijn er nog dingen die u ons nog meer kunt vertellen?",
                },
              },
              "phone": Object {
                "meta": Object {
                  "isVisible": true,
                  "label": "Wat is uw telefoonnummer?",
                  "type": "text",
                },
              },
            },
          }
        }
        onMount={[Function]}
        onUnmount={[Function]}
      >
        <FieldGroup
          control={
            FormGroup {
              "_onDisabledChange": Array [],
              "_pendingChange": false,
              "_pendingDirty": false,
              "_pendingTouched": false,
              "asyncValidator": null,
              "controls": Object {
                "extra_boten_geluid_meer": FormControl {
                  "_onCollectionChange": [Function],
                  "_onDisabledChange": Array [],
                  "_parent": [Circular],
                  "_pendingChange": true,
                  "_pendingDirty": false,
                  "_pendingTouched": false,
                  "_pendingValue": undefined,
                  "asyncValidator": null,
                  "errors": null,
                  "formState": undefined,
                  "get": [Function],
                  "getError": [Function],
                  "handler": [Function],
                  "hasError": [Function],
                  "meta": Object {
                    "isVisible": false,
                    "label": "Zijn er nog dingen die u ons nog meer kunt vertellen?",
                  },
                  "onBlur": [Function],
                  "onBlurChanges": Observable {
                    "observers": Array [],
                  },
                  "onChange": [Function],
                  "onValueChanges": Observable {
                    "observers": Array [],
                  },
                  "patchValue": [Function],
                  "pristine": true,
                  "reset": [Function],
                  "setValue": [Function],
                  "stateChanges": Observable {
                    "observers": Array [
                      [Function],
                    ],
                  },
                  "status": "VALID",
                  "statusChanges": Observable {
                    "observers": Array [],
                  },
                  "submitted": false,
                  "touched": false,
                  "validator": null,
                  "validatorsOrOpts": undefined,
                  "value": undefined,
                  "valueChanges": Observable {
                    "observers": Array [],
                  },
                },
                "phone": FormControl {
                  "_onCollectionChange": [Function],
                  "_onDisabledChange": Array [],
                  "_parent": [Circular],
                  "_pendingChange": true,
                  "_pendingDirty": false,
                  "_pendingTouched": false,
                  "_pendingValue": undefined,
                  "asyncValidator": null,
                  "errors": null,
                  "formState": undefined,
                  "get": [Function],
                  "getError": [Function],
                  "handler": [Function],
                  "hasError": [Function],
                  "meta": Object {
                    "isVisible": true,
                    "label": "Wat is uw telefoonnummer?",
                    "type": "text",
                  },
                  "onBlur": [Function],
                  "onBlurChanges": Observable {
                    "observers": Array [],
                  },
                  "onChange": [Function],
                  "onValueChanges": Observable {
                    "observers": Array [],
                  },
                  "patchValue": [Function],
                  "pristine": true,
                  "reset": [Function],
                  "setValue": [Function],
                  "stateChanges": Observable {
                    "observers": Array [
                      [Function],
                    ],
                  },
                  "status": "VALID",
                  "statusChanges": Observable {
                    "observers": Array [],
                  },
                  "submitted": false,
                  "touched": false,
                  "validator": null,
                  "validatorsOrOpts": undefined,
                  "value": undefined,
                  "valueChanges": Observable {
                    "observers": Array [],
                  },
                },
              },
              "errors": null,
              "get": [Function],
              "getError": [Function],
              "handleSubmit": [Function],
              "hasError": [Function],
              "meta": Object {
                "createIncident": [MockFunction],
                "form": [Circular],
                "getClassification": [MockFunction],
                "handleSubmit": [Function],
                "incidentContainer": Object {
                  "incident": Object {},
                },
                "updateIncident": [MockFunction],
                "wizard": Object {},
              },
              "patchValue": [Function],
              "pristine": true,
              "reset": [Function],
              "setValue": [Function],
              "stateChanges": Observable {
                "observers": Array [
                  [Function],
                ],
              },
              "status": "VALID",
              "statusChanges": Observable {
                "observers": Array [],
              },
              "submitted": false,
              "touched": false,
              "validator": null,
              "validatorOrOpts": undefined,
              "value": Object {
                "extra_boten_geluid_meer": undefined,
                "phone": undefined,
              },
              "valueChanges": Observable {
                "observers": Array [],
              },
            }
          }
          key="my_form"
          render={[Function]}
          strict={true}
        >
          <Field
            control={
              FormGroup {
                "_onDisabledChange": Array [],
                "_pendingChange": false,
                "_pendingDirty": false,
                "_pendingTouched": false,
                "asyncValidator": null,
                "controls": Object {
                  "extra_boten_geluid_meer": FormControl {
                    "_onCollectionChange": [Function],
                    "_onDisabledChange": Array [],
                    "_parent": [Circular],
                    "_pendingChange": true,
                    "_pendingDirty": false,
                    "_pendingTouched": false,
                    "_pendingValue": undefined,
                    "asyncValidator": null,
                    "errors": null,
                    "formState": undefined,
                    "get": [Function],
                    "getError": [Function],
                    "handler": [Function],
                    "hasError": [Function],
                    "meta": Object {
                      "isVisible": false,
                      "label": "Zijn er nog dingen die u ons nog meer kunt vertellen?",
                    },
                    "onBlur": [Function],
                    "onBlurChanges": Observable {
                      "observers": Array [],
                    },
                    "onChange": [Function],
                    "onValueChanges": Observable {
                      "observers": Array [],
                    },
                    "patchValue": [Function],
                    "pristine": true,
                    "reset": [Function],
                    "setValue": [Function],
                    "stateChanges": Observable {
                      "observers": Array [
                        [Function],
                      ],
                    },
                    "status": "VALID",
                    "statusChanges": Observable {
                      "observers": Array [],
                    },
                    "submitted": false,
                    "touched": false,
                    "validator": null,
                    "validatorsOrOpts": undefined,
                    "value": undefined,
                    "valueChanges": Observable {
                      "observers": Array [],
                    },
                  },
                  "phone": FormControl {
                    "_onCollectionChange": [Function],
                    "_onDisabledChange": Array [],
                    "_parent": [Circular],
                    "_pendingChange": true,
                    "_pendingDirty": false,
                    "_pendingTouched": false,
                    "_pendingValue": undefined,
                    "asyncValidator": null,
                    "errors": null,
                    "formState": undefined,
                    "get": [Function],
                    "getError": [Function],
                    "handler": [Function],
                    "hasError": [Function],
                    "meta": Object {
                      "isVisible": true,
                      "label": "Wat is uw telefoonnummer?",
                      "type": "text",
                    },
                    "onBlur": [Function],
                    "onBlurChanges": Observable {
                      "observers": Array [],
                    },
                    "onChange": [Function],
                    "onValueChanges": Observable {
                      "observers": Array [],
                    },
                    "patchValue": [Function],
                    "pristine": true,
                    "reset": [Function],
                    "setValue": [Function],
                    "stateChanges": Observable {
                      "observers": Array [
                        [Function],
                      ],
                    },
                    "status": "VALID",
                    "statusChanges": Observable {
                      "observers": Array [],
                    },
                    "submitted": false,
                    "touched": false,
                    "validator": null,
                    "validatorsOrOpts": undefined,
                    "value": undefined,
                    "valueChanges": Observable {
                      "observers": Array [],
                    },
                  },
                },
                "errors": null,
                "get": [Function],
                "getError": [Function],
                "handleSubmit": [Function],
                "hasError": [Function],
                "meta": Object {
                  "createIncident": [MockFunction],
                  "form": [Circular],
                  "getClassification": [MockFunction],
                  "handleSubmit": [Function],
                  "incidentContainer": Object {
                    "incident": Object {},
                  },
                  "updateIncident": [MockFunction],
                  "wizard": Object {},
                },
                "patchValue": [Function],
                "pristine": true,
                "reset": [Function],
                "setValue": [Function],
                "stateChanges": Observable {
                  "observers": Array [
                    [Function],
                  ],
                },
                "status": "VALID",
                "statusChanges": Observable {
                  "observers": Array [],
                },
                "submitted": false,
                "touched": false,
                "validator": null,
                "validatorOrOpts": undefined,
                "value": Object {
                  "extra_boten_geluid_meer": undefined,
                  "phone": undefined,
                },
                "valueChanges": Observable {
                  "observers": Array [],
                },
              }
            }
            render={[Function]}
            strict={true}
          >
            <FieldControl
              key="phone"
              meta={
                Object {
                  "isVisible": true,
                  "label": "Wat is uw telefoonnummer?",
                  "type": "text",
                }
              }
              name="phone"
              strict={true}
            >
              <Field
                control={
                  FormControl {
                    "_onCollectionChange": [Function],
                    "_onDisabledChange": Array [],
                    "_parent": FormGroup {
                      "_onDisabledChange": Array [],
                      "_pendingChange": false,
                      "_pendingDirty": false,
                      "_pendingTouched": false,
                      "asyncValidator": null,
                      "controls": Object {
                        "extra_boten_geluid_meer": FormControl {
                          "_onCollectionChange": [Function],
                          "_onDisabledChange": Array [],
                          "_parent": [Circular],
                          "_pendingChange": true,
                          "_pendingDirty": false,
                          "_pendingTouched": false,
                          "_pendingValue": undefined,
                          "asyncValidator": null,
                          "errors": null,
                          "formState": undefined,
                          "get": [Function],
                          "getError": [Function],
                          "handler": [Function],
                          "hasError": [Function],
                          "meta": Object {
                            "isVisible": false,
                            "label": "Zijn er nog dingen die u ons nog meer kunt vertellen?",
                          },
                          "onBlur": [Function],
                          "onBlurChanges": Observable {
                            "observers": Array [],
                          },
                          "onChange": [Function],
                          "onValueChanges": Observable {
                            "observers": Array [],
                          },
                          "patchValue": [Function],
                          "pristine": true,
                          "reset": [Function],
                          "setValue": [Function],
                          "stateChanges": Observable {
                            "observers": Array [
                              [Function],
                            ],
                          },
                          "status": "VALID",
                          "statusChanges": Observable {
                            "observers": Array [],
                          },
                          "submitted": false,
                          "touched": false,
                          "validator": null,
                          "validatorsOrOpts": undefined,
                          "value": undefined,
                          "valueChanges": Observable {
                            "observers": Array [],
                          },
                        },
                        "phone": [Circular],
                      },
                      "errors": null,
                      "get": [Function],
                      "getError": [Function],
                      "handleSubmit": [Function],
                      "hasError": [Function],
                      "meta": Object {
                        "createIncident": [MockFunction],
                        "form": [Circular],
                        "getClassification": [MockFunction],
                        "handleSubmit": [Function],
                        "incidentContainer": Object {
                          "incident": Object {},
                        },
                        "updateIncident": [MockFunction],
                        "wizard": Object {},
                      },
                      "patchValue": [Function],
                      "pristine": true,
                      "reset": [Function],
                      "setValue": [Function],
                      "stateChanges": Observable {
                        "observers": Array [
                          [Function],
                        ],
                      },
                      "status": "VALID",
                      "statusChanges": Observable {
                        "observers": Array [],
                      },
                      "submitted": false,
                      "touched": false,
                      "validator": null,
                      "validatorOrOpts": undefined,
                      "value": Object {
                        "extra_boten_geluid_meer": undefined,
                        "phone": undefined,
                      },
                      "valueChanges": Observable {
                        "observers": Array [],
                      },
                    },
                    "_pendingChange": true,
                    "_pendingDirty": false,
                    "_pendingTouched": false,
                    "_pendingValue": undefined,
                    "asyncValidator": null,
                    "errors": null,
                    "formState": undefined,
                    "get": [Function],
                    "getError": [Function],
                    "handler": [Function],
                    "hasError": [Function],
                    "meta": Object {
                      "isVisible": true,
                      "label": "Wat is uw telefoonnummer?",
                      "type": "text",
                    },
                    "onBlur": [Function],
                    "onBlurChanges": Observable {
                      "observers": Array [],
                    },
                    "onChange": [Function],
                    "onValueChanges": Observable {
                      "observers": Array [],
                    },
                    "patchValue": [Function],
                    "pristine": true,
                    "reset": [Function],
                    "setValue": [Function],
                    "stateChanges": Observable {
                      "observers": Array [
                        [Function],
                      ],
                    },
                    "status": "VALID",
                    "statusChanges": Observable {
                      "observers": Array [],
                    },
                    "submitted": false,
                    "touched": false,
                    "validator": null,
                    "validatorsOrOpts": undefined,
                    "value": undefined,
                    "valueChanges": Observable {
                      "observers": Array [],
                    },
                  }
                }
                render={null}
                strict={true}
              />
            </FieldControl>
            <FieldControl
              key="extra_boten_geluid_meer"
              meta={
                Object {
                  "isVisible": false,
                  "label": "Zijn er nog dingen die u ons nog meer kunt vertellen?",
                }
              }
              name="extra_boten_geluid_meer"
              strict={true}
            >
              <Field
                control={
                  FormControl {
                    "_onCollectionChange": [Function],
                    "_onDisabledChange": Array [],
                    "_parent": FormGroup {
                      "_onDisabledChange": Array [],
                      "_pendingChange": false,
                      "_pendingDirty": false,
                      "_pendingTouched": false,
                      "asyncValidator": null,
                      "controls": Object {
                        "extra_boten_geluid_meer": [Circular],
                        "phone": FormControl {
                          "_onCollectionChange": [Function],
                          "_onDisabledChange": Array [],
                          "_parent": [Circular],
                          "_pendingChange": true,
                          "_pendingDirty": false,
                          "_pendingTouched": false,
                          "_pendingValue": undefined,
                          "asyncValidator": null,
                          "errors": null,
                          "formState": undefined,
                          "get": [Function],
                          "getError": [Function],
                          "handler": [Function],
                          "hasError": [Function],
                          "meta": Object {
                            "isVisible": true,
                            "label": "Wat is uw telefoonnummer?",
                            "type": "text",
                          },
                          "onBlur": [Function],
                          "onBlurChanges": Observable {
                            "observers": Array [],
                          },
                          "onChange": [Function],
                          "onValueChanges": Observable {
                            "observers": Array [],
                          },
                          "patchValue": [Function],
                          "pristine": true,
                          "reset": [Function],
                          "setValue": [Function],
                          "stateChanges": Observable {
                            "observers": Array [
                              [Function],
                            ],
                          },
                          "status": "VALID",
                          "statusChanges": Observable {
                            "observers": Array [],
                          },
                          "submitted": false,
                          "touched": false,
                          "validator": null,
                          "validatorsOrOpts": undefined,
                          "value": undefined,
                          "valueChanges": Observable {
                            "observers": Array [],
                          },
                        },
                      },
                      "errors": null,
                      "get": [Function],
                      "getError": [Function],
                      "handleSubmit": [Function],
                      "hasError": [Function],
                      "meta": Object {
                        "createIncident": [MockFunction],
                        "form": [Circular],
                        "getClassification": [MockFunction],
                        "handleSubmit": [Function],
                        "incidentContainer": Object {
                          "incident": Object {},
                        },
                        "updateIncident": [MockFunction],
                        "wizard": Object {},
                      },
                      "patchValue": [Function],
                      "pristine": true,
                      "reset": [Function],
                      "setValue": [Function],
                      "stateChanges": Observable {
                        "observers": Array [
                          [Function],
                        ],
                      },
                      "status": "VALID",
                      "statusChanges": Observable {
                        "observers": Array [],
                      },
                      "submitted": false,
                      "touched": false,
                      "validator": null,
                      "validatorOrOpts": undefined,
                      "value": Object {
                        "extra_boten_geluid_meer": undefined,
                        "phone": undefined,
                      },
                      "valueChanges": Observable {
                        "observers": Array [],
                      },
                    },
                    "_pendingChange": true,
                    "_pendingDirty": false,
                    "_pendingTouched": false,
                    "_pendingValue": undefined,
                    "asyncValidator": null,
                    "errors": null,
                    "formState": undefined,
                    "get": [Function],
                    "getError": [Function],
                    "handler": [Function],
                    "hasError": [Function],
                    "meta": Object {
                      "isVisible": false,
                      "label": "Zijn er nog dingen die u ons nog meer kunt vertellen?",
                    },
                    "onBlur": [Function],
                    "onBlurChanges": Observable {
                      "observers": Array [],
                    },
                    "onChange": [Function],
                    "onValueChanges": Observable {
                      "observers": Array [],
                    },
                    "patchValue": [Function],
                    "pristine": true,
                    "reset": [Function],
                    "setValue": [Function],
                    "stateChanges": Observable {
                      "observers": Array [
                        [Function],
                      ],
                    },
                    "status": "VALID",
                    "statusChanges": Observable {
                      "observers": Array [],
                    },
                    "submitted": false,
                    "touched": false,
                    "validator": null,
                    "validatorsOrOpts": undefined,
                    "value": undefined,
                    "valueChanges": Observable {
                      "observers": Array [],
                    },
                  }
                }
                render={null}
                strict={true}
              />
            </FieldControl>
          </Field>
        </FieldGroup>
      </FormGenerator>
    </form>
  </div>
</IncidentForm>
`;

exports[`<IncidentForm /> rendering expect to render correctly when form vars have changed 1`] = `
<IncidentForm
  createIncident={[MockFunction]}
  fieldConfig={
    Object {
      "controls": Object {},
    }
  }
  getClassification={[MockFunction]}
  incident={
    Object {
      "extra_boten_geluid_meer": "Ja! Wat een teringzooi hier",
      "extra_personen_overig_vaker": true,
      "phone": "06987654321",
      "priority": "high",
      "subcategory": "(Honden)poep",
    }
  }
  incidentContainer={
    Object {
      "incident": Object {},
    }
  }
  isAuthenticated={false}
  updateIncident={[MockFunction]}
  wizard={Object {}}
>
  <div
    className="incident-form"
  >
    <form
      onSubmit={[Function]}
    >
      <FormGenerator
        fieldConfig={
          Object {
            "controls": Object {
              "extra_boten_geluid_meer": Object {
                "meta": Object {
                  "isVisible": false,
                  "label": "Zijn er nog dingen die u ons nog meer kunt vertellen?",
                },
              },
              "phone": Object {
                "meta": Object {
                  "isVisible": true,
                  "label": "Wat is uw telefoonnummer?",
                  "type": "text",
                },
              },
            },
          }
        }
        onMount={[Function]}
        onUnmount={[Function]}
      >
        <FieldGroup
          control={
            FormGroup {
              "_onDisabledChange": Array [],
              "_pendingChange": false,
              "_pendingDirty": false,
              "_pendingTouched": false,
              "asyncValidator": null,
              "controls": Object {
                "extra_boten_geluid_meer": FormControl {
                  "_onCollectionChange": [Function],
                  "_onDisabledChange": Array [],
                  "_parent": [Circular],
                  "_pendingChange": true,
                  "_pendingDirty": false,
                  "_pendingTouched": false,
                  "_pendingValue": undefined,
                  "asyncValidator": null,
                  "errors": null,
                  "formState": undefined,
                  "get": [Function],
                  "getError": [Function],
                  "handler": [Function],
                  "hasError": [Function],
                  "meta": Object {
                    "isVisible": false,
                    "label": "Zijn er nog dingen die u ons nog meer kunt vertellen?",
                  },
                  "onBlur": [Function],
                  "onBlurChanges": Observable {
                    "observers": Array [],
                  },
                  "onChange": [Function],
                  "onValueChanges": Observable {
                    "observers": Array [],
                  },
                  "patchValue": [Function],
                  "pristine": true,
                  "reset": [Function],
                  "setValue": [Function],
                  "stateChanges": Observable {
                    "observers": Array [
                      [Function],
                    ],
                  },
                  "status": "VALID",
                  "statusChanges": Observable {
                    "observers": Array [],
                  },
                  "submitted": false,
                  "touched": false,
                  "validator": null,
                  "validatorsOrOpts": undefined,
                  "value": undefined,
                  "valueChanges": Observable {
                    "observers": Array [],
                  },
                },
                "phone": FormControl {
                  "_onCollectionChange": [Function],
                  "_onDisabledChange": Array [],
                  "_parent": [Circular],
                  "_pendingChange": true,
                  "_pendingDirty": false,
                  "_pendingTouched": false,
                  "_pendingValue": undefined,
                  "asyncValidator": null,
                  "errors": null,
                  "formState": undefined,
                  "get": [Function],
                  "getError": [Function],
                  "handler": [Function],
                  "hasError": [Function],
                  "meta": Object {
                    "isVisible": true,
                    "label": "Wat is uw telefoonnummer?",
                    "type": "text",
                  },
                  "onBlur": [Function],
                  "onBlurChanges": Observable {
                    "observers": Array [],
                  },
                  "onChange": [Function],
                  "onValueChanges": Observable {
                    "observers": Array [],
                  },
                  "patchValue": [Function],
                  "pristine": true,
                  "reset": [Function],
                  "setValue": [Function],
                  "stateChanges": Observable {
                    "observers": Array [
                      [Function],
                    ],
                  },
                  "status": "VALID",
                  "statusChanges": Observable {
                    "observers": Array [],
                  },
                  "submitted": false,
                  "touched": false,
                  "validator": null,
                  "validatorsOrOpts": undefined,
                  "value": undefined,
                  "valueChanges": Observable {
                    "observers": Array [],
                  },
                },
              },
              "errors": null,
              "get": [Function],
              "getError": [Function],
              "handleSubmit": [Function],
              "hasError": [Function],
              "meta": Object {
                "createIncident": [MockFunction],
                "form": [Circular],
                "getClassification": [MockFunction],
                "handleSubmit": [Function],
                "incident": Object {},
                "incidentContainer": Object {
                  "incident": Object {},
                },
                "updateIncident": [MockFunction],
                "wizard": Object {},
              },
              "patchValue": [Function],
              "pristine": true,
              "reset": [Function],
              "setValue": [Function],
              "stateChanges": Observable {
                "observers": Array [
                  [Function],
                ],
              },
              "status": "VALID",
              "statusChanges": Observable {
                "observers": Array [],
              },
              "submitted": false,
              "touched": false,
              "validator": null,
              "validatorOrOpts": undefined,
              "value": Object {
                "extra_boten_geluid_meer": undefined,
                "phone": undefined,
              },
              "valueChanges": Observable {
                "observers": Array [],
              },
            }
          }
          key="my_form"
          render={[Function]}
          strict={true}
        >
          <Field
            control={
              FormGroup {
                "_onDisabledChange": Array [],
                "_pendingChange": false,
                "_pendingDirty": false,
                "_pendingTouched": false,
                "asyncValidator": null,
                "controls": Object {
                  "extra_boten_geluid_meer": FormControl {
                    "_onCollectionChange": [Function],
                    "_onDisabledChange": Array [],
                    "_parent": [Circular],
                    "_pendingChange": true,
                    "_pendingDirty": false,
                    "_pendingTouched": false,
                    "_pendingValue": undefined,
                    "asyncValidator": null,
                    "errors": null,
                    "formState": undefined,
                    "get": [Function],
                    "getError": [Function],
                    "handler": [Function],
                    "hasError": [Function],
                    "meta": Object {
                      "isVisible": false,
                      "label": "Zijn er nog dingen die u ons nog meer kunt vertellen?",
                    },
                    "onBlur": [Function],
                    "onBlurChanges": Observable {
                      "observers": Array [],
                    },
                    "onChange": [Function],
                    "onValueChanges": Observable {
                      "observers": Array [],
                    },
                    "patchValue": [Function],
                    "pristine": true,
                    "reset": [Function],
                    "setValue": [Function],
                    "stateChanges": Observable {
                      "observers": Array [
                        [Function],
                      ],
                    },
                    "status": "VALID",
                    "statusChanges": Observable {
                      "observers": Array [],
                    },
                    "submitted": false,
                    "touched": false,
                    "validator": null,
                    "validatorsOrOpts": undefined,
                    "value": undefined,
                    "valueChanges": Observable {
                      "observers": Array [],
                    },
                  },
                  "phone": FormControl {
                    "_onCollectionChange": [Function],
                    "_onDisabledChange": Array [],
                    "_parent": [Circular],
                    "_pendingChange": true,
                    "_pendingDirty": false,
                    "_pendingTouched": false,
                    "_pendingValue": undefined,
                    "asyncValidator": null,
                    "errors": null,
                    "formState": undefined,
                    "get": [Function],
                    "getError": [Function],
                    "handler": [Function],
                    "hasError": [Function],
                    "meta": Object {
                      "isVisible": true,
                      "label": "Wat is uw telefoonnummer?",
                      "type": "text",
                    },
                    "onBlur": [Function],
                    "onBlurChanges": Observable {
                      "observers": Array [],
                    },
                    "onChange": [Function],
                    "onValueChanges": Observable {
                      "observers": Array [],
                    },
                    "patchValue": [Function],
                    "pristine": true,
                    "reset": [Function],
                    "setValue": [Function],
                    "stateChanges": Observable {
                      "observers": Array [
                        [Function],
                      ],
                    },
                    "status": "VALID",
                    "statusChanges": Observable {
                      "observers": Array [],
                    },
                    "submitted": false,
                    "touched": false,
                    "validator": null,
                    "validatorsOrOpts": undefined,
                    "value": undefined,
                    "valueChanges": Observable {
                      "observers": Array [],
                    },
                  },
                },
                "errors": null,
                "get": [Function],
                "getError": [Function],
                "handleSubmit": [Function],
                "hasError": [Function],
                "meta": Object {
                  "createIncident": [MockFunction],
                  "form": [Circular],
                  "getClassification": [MockFunction],
                  "handleSubmit": [Function],
                  "incident": Object {},
                  "incidentContainer": Object {
                    "incident": Object {},
                  },
                  "updateIncident": [MockFunction],
                  "wizard": Object {},
                },
                "patchValue": [Function],
                "pristine": true,
                "reset": [Function],
                "setValue": [Function],
                "stateChanges": Observable {
                  "observers": Array [
                    [Function],
                  ],
                },
                "status": "VALID",
                "statusChanges": Observable {
                  "observers": Array [],
                },
                "submitted": false,
                "touched": false,
                "validator": null,
                "validatorOrOpts": undefined,
                "value": Object {
                  "extra_boten_geluid_meer": undefined,
                  "phone": undefined,
                },
                "valueChanges": Observable {
                  "observers": Array [],
                },
              }
            }
            render={[Function]}
            strict={true}
          >
            <FieldControl
              key="phone"
              meta={
                Object {
                  "isVisible": true,
                  "label": "Wat is uw telefoonnummer?",
                  "type": "text",
                }
              }
              name="phone"
              strict={true}
            >
              <Field
                control={
                  FormControl {
                    "_onCollectionChange": [Function],
                    "_onDisabledChange": Array [],
                    "_parent": FormGroup {
                      "_onDisabledChange": Array [],
                      "_pendingChange": false,
                      "_pendingDirty": false,
                      "_pendingTouched": false,
                      "asyncValidator": null,
                      "controls": Object {
                        "extra_boten_geluid_meer": FormControl {
                          "_onCollectionChange": [Function],
                          "_onDisabledChange": Array [],
                          "_parent": [Circular],
                          "_pendingChange": true,
                          "_pendingDirty": false,
                          "_pendingTouched": false,
                          "_pendingValue": undefined,
                          "asyncValidator": null,
                          "errors": null,
                          "formState": undefined,
                          "get": [Function],
                          "getError": [Function],
                          "handler": [Function],
                          "hasError": [Function],
                          "meta": Object {
                            "isVisible": false,
                            "label": "Zijn er nog dingen die u ons nog meer kunt vertellen?",
                          },
                          "onBlur": [Function],
                          "onBlurChanges": Observable {
                            "observers": Array [],
                          },
                          "onChange": [Function],
                          "onValueChanges": Observable {
                            "observers": Array [],
                          },
                          "patchValue": [Function],
                          "pristine": true,
                          "reset": [Function],
                          "setValue": [Function],
                          "stateChanges": Observable {
                            "observers": Array [
                              [Function],
                            ],
                          },
                          "status": "VALID",
                          "statusChanges": Observable {
                            "observers": Array [],
                          },
                          "submitted": false,
                          "touched": false,
                          "validator": null,
                          "validatorsOrOpts": undefined,
                          "value": undefined,
                          "valueChanges": Observable {
                            "observers": Array [],
                          },
                        },
                        "phone": [Circular],
                      },
                      "errors": null,
                      "get": [Function],
                      "getError": [Function],
                      "handleSubmit": [Function],
                      "hasError": [Function],
                      "meta": Object {
                        "createIncident": [MockFunction],
                        "form": [Circular],
                        "getClassification": [MockFunction],
                        "handleSubmit": [Function],
                        "incident": Object {},
                        "incidentContainer": Object {
                          "incident": Object {},
                        },
                        "updateIncident": [MockFunction],
                        "wizard": Object {},
                      },
                      "patchValue": [Function],
                      "pristine": true,
                      "reset": [Function],
                      "setValue": [Function],
                      "stateChanges": Observable {
                        "observers": Array [
                          [Function],
                        ],
                      },
                      "status": "VALID",
                      "statusChanges": Observable {
                        "observers": Array [],
                      },
                      "submitted": false,
                      "touched": false,
                      "validator": null,
                      "validatorOrOpts": undefined,
                      "value": Object {
                        "extra_boten_geluid_meer": undefined,
                        "phone": undefined,
                      },
                      "valueChanges": Observable {
                        "observers": Array [],
                      },
                    },
                    "_pendingChange": true,
                    "_pendingDirty": false,
                    "_pendingTouched": false,
                    "_pendingValue": undefined,
                    "asyncValidator": null,
                    "errors": null,
                    "formState": undefined,
                    "get": [Function],
                    "getError": [Function],
                    "handler": [Function],
                    "hasError": [Function],
                    "meta": Object {
                      "isVisible": true,
                      "label": "Wat is uw telefoonnummer?",
                      "type": "text",
                    },
                    "onBlur": [Function],
                    "onBlurChanges": Observable {
                      "observers": Array [],
                    },
                    "onChange": [Function],
                    "onValueChanges": Observable {
                      "observers": Array [],
                    },
                    "patchValue": [Function],
                    "pristine": true,
                    "reset": [Function],
                    "setValue": [Function],
                    "stateChanges": Observable {
                      "observers": Array [
                        [Function],
                      ],
                    },
                    "status": "VALID",
                    "statusChanges": Observable {
                      "observers": Array [],
                    },
                    "submitted": false,
                    "touched": false,
                    "validator": null,
                    "validatorsOrOpts": undefined,
                    "value": undefined,
                    "valueChanges": Observable {
                      "observers": Array [],
                    },
                  }
                }
                render={null}
                strict={true}
              />
            </FieldControl>
            <FieldControl
              key="extra_boten_geluid_meer"
              meta={
                Object {
                  "isVisible": false,
                  "label": "Zijn er nog dingen die u ons nog meer kunt vertellen?",
                }
              }
              name="extra_boten_geluid_meer"
              strict={true}
            >
              <Field
                control={
                  FormControl {
                    "_onCollectionChange": [Function],
                    "_onDisabledChange": Array [],
                    "_parent": FormGroup {
                      "_onDisabledChange": Array [],
                      "_pendingChange": false,
                      "_pendingDirty": false,
                      "_pendingTouched": false,
                      "asyncValidator": null,
                      "controls": Object {
                        "extra_boten_geluid_meer": [Circular],
                        "phone": FormControl {
                          "_onCollectionChange": [Function],
                          "_onDisabledChange": Array [],
                          "_parent": [Circular],
                          "_pendingChange": true,
                          "_pendingDirty": false,
                          "_pendingTouched": false,
                          "_pendingValue": undefined,
                          "asyncValidator": null,
                          "errors": null,
                          "formState": undefined,
                          "get": [Function],
                          "getError": [Function],
                          "handler": [Function],
                          "hasError": [Function],
                          "meta": Object {
                            "isVisible": true,
                            "label": "Wat is uw telefoonnummer?",
                            "type": "text",
                          },
                          "onBlur": [Function],
                          "onBlurChanges": Observable {
                            "observers": Array [],
                          },
                          "onChange": [Function],
                          "onValueChanges": Observable {
                            "observers": Array [],
                          },
                          "patchValue": [Function],
                          "pristine": true,
                          "reset": [Function],
                          "setValue": [Function],
                          "stateChanges": Observable {
                            "observers": Array [
                              [Function],
                            ],
                          },
                          "status": "VALID",
                          "statusChanges": Observable {
                            "observers": Array [],
                          },
                          "submitted": false,
                          "touched": false,
                          "validator": null,
                          "validatorsOrOpts": undefined,
                          "value": undefined,
                          "valueChanges": Observable {
                            "observers": Array [],
                          },
                        },
                      },
                      "errors": null,
                      "get": [Function],
                      "getError": [Function],
                      "handleSubmit": [Function],
                      "hasError": [Function],
                      "meta": Object {
                        "createIncident": [MockFunction],
                        "form": [Circular],
                        "getClassification": [MockFunction],
                        "handleSubmit": [Function],
                        "incident": Object {},
                        "incidentContainer": Object {
                          "incident": Object {},
                        },
                        "updateIncident": [MockFunction],
                        "wizard": Object {},
                      },
                      "patchValue": [Function],
                      "pristine": true,
                      "reset": [Function],
                      "setValue": [Function],
                      "stateChanges": Observable {
                        "observers": Array [
                          [Function],
                        ],
                      },
                      "status": "VALID",
                      "statusChanges": Observable {
                        "observers": Array [],
                      },
                      "submitted": false,
                      "touched": false,
                      "validator": null,
                      "validatorOrOpts": undefined,
                      "value": Object {
                        "extra_boten_geluid_meer": undefined,
                        "phone": undefined,
                      },
                      "valueChanges": Observable {
                        "observers": Array [],
                      },
                    },
                    "_pendingChange": true,
                    "_pendingDirty": false,
                    "_pendingTouched": false,
                    "_pendingValue": undefined,
                    "asyncValidator": null,
                    "errors": null,
                    "formState": undefined,
                    "get": [Function],
                    "getError": [Function],
                    "handler": [Function],
                    "hasError": [Function],
                    "meta": Object {
                      "isVisible": false,
                      "label": "Zijn er nog dingen die u ons nog meer kunt vertellen?",
                    },
                    "onBlur": [Function],
                    "onBlurChanges": Observable {
                      "observers": Array [],
                    },
                    "onChange": [Function],
                    "onValueChanges": Observable {
                      "observers": Array [],
                    },
                    "patchValue": [Function],
                    "pristine": true,
                    "reset": [Function],
                    "setValue": [Function],
                    "stateChanges": Observable {
                      "observers": Array [
                        [Function],
                      ],
                    },
                    "status": "VALID",
                    "statusChanges": Observable {
                      "observers": Array [],
                    },
                    "submitted": false,
                    "touched": false,
                    "validator": null,
                    "validatorsOrOpts": undefined,
                    "value": undefined,
                    "valueChanges": Observable {
                      "observers": Array [],
                    },
                  }
                }
                render={null}
                strict={true}
              />
            </FieldControl>
          </Field>
        </FieldGroup>
      </FormGenerator>
    </form>
  </div>
</IncidentForm>
`;
