// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Preview component <Map /> should render address with toevoeging correctly 1`] = `
<Row
  debug={false}
  debugColor="rgba(51,102,153,0.75)"
  hasMargin={false}
>
  <Column
    debug={false}
    debugColor="rgba(51,102,153,0.5)"
    order={0}
    push={0}
    span={
      Object {
        "big": 6,
        "large": 10,
        "medium": 2,
        "small": 1,
        "xLarge": 10,
      }
    }
    wrap={true}
  >
    <Column
      debug={false}
      debugColor="rgba(51,102,153,0.5)"
      order={0}
      push={0}
      span={
        Object {
          "big": 2,
          "large": 2,
          "medium": 2,
          "small": 1,
          "xLarge": 2,
        }
      }
      wrap={false}
    >
      <Map__ItemWrapper>
        Location
      </Map__ItemWrapper>
    </Column>
    <Column
      debug={false}
      debugColor="rgba(51,102,153,0.5)"
      order={0}
      push={0}
      span={
        Object {
          "big": 4,
          "large": 6,
          "medium": 2,
          "small": 1,
          "xLarge": 6,
        }
      }
      wrap={false}
    >
      <Map__ItemWrapper>
        <div>
          Hell 666C-3, 1087JC Amsterdam
        </div>
      </Map__ItemWrapper>
    </Column>
  </Column>
</Row>
`;

exports[`Preview component <Map /> should render only address correctly 1`] = `
<Row
  debug={false}
  debugColor="rgba(51,102,153,0.75)"
  hasMargin={false}
>
  <Column
    debug={false}
    debugColor="rgba(51,102,153,0.5)"
    order={0}
    push={0}
    span={
      Object {
        "big": 6,
        "large": 10,
        "medium": 2,
        "small": 1,
        "xLarge": 10,
      }
    }
    wrap={true}
  >
    <Column
      debug={false}
      debugColor="rgba(51,102,153,0.5)"
      order={0}
      push={0}
      span={
        Object {
          "big": 2,
          "large": 2,
          "medium": 2,
          "small": 1,
          "xLarge": 2,
        }
      }
      wrap={false}
    >
      <Map__ItemWrapper>
        Location
      </Map__ItemWrapper>
    </Column>
    <Column
      debug={false}
      debugColor="rgba(51,102,153,0.5)"
      order={0}
      push={0}
      span={
        Object {
          "big": 4,
          "large": 6,
          "medium": 2,
          "small": 1,
          "xLarge": 6,
        }
      }
      wrap={false}
    >
      <Map__ItemWrapper>
        <div>
          Hell 666C, 1087JC Amsterdam
        </div>
      </Map__ItemWrapper>
    </Column>
  </Column>
</Row>
`;

exports[`Preview component <Map /> should render only latlong correctly 1`] = `
<Row
  debug={false}
  debugColor="rgba(51,102,153,0.75)"
  hasMargin={false}
>
  <Column
    debug={false}
    debugColor="rgba(51,102,153,0.5)"
    order={0}
    push={0}
    span={
      Object {
        "big": 6,
        "large": 10,
        "medium": 2,
        "small": 1,
        "xLarge": 10,
      }
    }
    wrap={true}
  >
    <Column
      debug={false}
      debugColor="rgba(51,102,153,0.5)"
      order={0}
      push={0}
      span={
        Object {
          "big": 2,
          "large": 2,
          "medium": 2,
          "small": 1,
          "xLarge": 2,
        }
      }
      wrap={false}
    >
      <Map__ItemWrapper>
        Location
      </Map__ItemWrapper>
    </Column>
    <Column
      debug={false}
      debugColor="rgba(51,102,153,0.5)"
      order={0}
      push={0}
      span={
        Object {
          "big": 4,
          "large": 6,
          "medium": 2,
          "small": 1,
          "xLarge": 6,
        }
      }
      wrap={false}
    >
      <Map__ItemWrapper>
        <div>
          Geen adres gevonden
        </div>
        <Map__StyledMap
          data-testid="map-preview"
          isInteractive={false}
          mapOptions={
            Object {
              "attributionControl": false,
              "center": Array [
                4,
                52,
              ],
              "crs": Object {
                "R": 6378137,
                "code": "EPSG:28992",
                "distance": [Function],
                "getProjectedBounds": [Function],
                "infinite": false,
                "latLngToPoint": [Function],
                "pointToLatLng": [Function],
                "project": [Function],
                "projection": Object {
                  "bounds": Object {
                    "max": Object {
                      "x": 595401.92,
                      "y": 903401,
                    },
                    "min": Object {
                      "x": -285401,
                      "y": 22598.08,
                    },
                  },
                  "proj4def": "+proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel +units=m +towgs84=565.2369,50.0087,465.658,-0.406857330322398,0.350732676542563,-1.8703473836068,4.0812 +no_defs",
                  "project": [Function],
                  "unproject": [Function],
                },
                "scale": [Function],
                "transformation": Object {
                  "_a": 1,
                  "_b": 285401.92,
                  "_c": -1,
                  "_d": 903401.92,
                },
                "unproject": [Function],
                "wrapLatLng": [Function],
                "wrapLatLngBounds": [Function],
                "zoom": [Function],
              },
              "maxBounds": Array [
                Array [
                  52.25168,
                  4.64034,
                ],
                Array [
                  52.50536,
                  5.10737,
                ],
              ],
              "zoom": 10,
              "zoomControl": false,
            }
          }
        >
          <Memo(LeafletComponent)
            args={
              Array [
                Object {
                  "lat": 4,
                  "lng": 52,
                },
              ]
            }
            options={
              Object {
                "icon": NewClass {
                  "_initHooksCalled": true,
                  "options": Object {
                    "className": "sia-map-marker",
                    "iconAnchor": Array [
                      20,
                      39,
                    ],
                    "iconSize": Array [
                      40,
                      40,
                    ],
                    "iconUrl": "https://map.data.amsterdam.nl/dist/images/svg/marker.svg",
                  },
                },
              }
            }
          />
        </Map__StyledMap>
      </Map__ItemWrapper>
    </Column>
  </Column>
</Row>
`;

exports[`Preview component <Map /> should render valid adrress and map with latlong correctly 1`] = `
<Row
  debug={false}
  debugColor="rgba(51,102,153,0.75)"
  hasMargin={false}
>
  <Column
    debug={false}
    debugColor="rgba(51,102,153,0.5)"
    order={0}
    push={0}
    span={
      Object {
        "big": 6,
        "large": 10,
        "medium": 2,
        "small": 1,
        "xLarge": 10,
      }
    }
    wrap={true}
  >
    <Column
      debug={false}
      debugColor="rgba(51,102,153,0.5)"
      order={0}
      push={0}
      span={
        Object {
          "big": 2,
          "large": 2,
          "medium": 2,
          "small": 1,
          "xLarge": 2,
        }
      }
      wrap={false}
    >
      <Map__ItemWrapper>
        Location
      </Map__ItemWrapper>
    </Column>
    <Column
      debug={false}
      debugColor="rgba(51,102,153,0.5)"
      order={0}
      push={0}
      span={
        Object {
          "big": 4,
          "large": 6,
          "medium": 2,
          "small": 1,
          "xLarge": 6,
        }
      }
      wrap={false}
    >
      <Map__ItemWrapper>
        <div>
          Hell 666C, 1087JC Amsterdam
        </div>
        <Map__StyledMap
          data-testid="map-preview"
          isInteractive={false}
          mapOptions={
            Object {
              "attributionControl": false,
              "center": Array [
                4,
                52,
              ],
              "crs": Object {
                "R": 6378137,
                "code": "EPSG:28992",
                "distance": [Function],
                "getProjectedBounds": [Function],
                "infinite": false,
                "latLngToPoint": [Function],
                "pointToLatLng": [Function],
                "project": [Function],
                "projection": Object {
                  "bounds": Object {
                    "max": Object {
                      "x": 595401.92,
                      "y": 903401,
                    },
                    "min": Object {
                      "x": -285401,
                      "y": 22598.08,
                    },
                  },
                  "proj4def": "+proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel +units=m +towgs84=565.2369,50.0087,465.658,-0.406857330322398,0.350732676542563,-1.8703473836068,4.0812 +no_defs",
                  "project": [Function],
                  "unproject": [Function],
                },
                "scale": [Function],
                "transformation": Object {
                  "_a": 1,
                  "_b": 285401.92,
                  "_c": -1,
                  "_d": 903401.92,
                },
                "unproject": [Function],
                "wrapLatLng": [Function],
                "wrapLatLngBounds": [Function],
                "zoom": [Function],
              },
              "maxBounds": Array [
                Array [
                  52.25168,
                  4.64034,
                ],
                Array [
                  52.50536,
                  5.10737,
                ],
              ],
              "zoom": 10,
              "zoomControl": false,
            }
          }
        >
          <Memo(LeafletComponent)
            args={
              Array [
                Object {
                  "lat": 4,
                  "lng": 52,
                },
              ]
            }
            options={
              Object {
                "icon": NewClass {
                  "_initHooksCalled": true,
                  "options": Object {
                    "className": "sia-map-marker",
                    "iconAnchor": Array [
                      20,
                      39,
                    ],
                    "iconSize": Array [
                      40,
                      40,
                    ],
                    "iconUrl": "https://map.data.amsterdam.nl/dist/images/svg/marker.svg",
                  },
                },
              }
            }
          />
        </Map__StyledMap>
      </Map__ItemWrapper>
    </Column>
  </Column>
</Row>
`;
