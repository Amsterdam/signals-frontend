{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "$ref": "#/definitions/Config",
  "definitions": {
    "Config": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "apiBaseUrl": {
          "description": "The base URL of the signals API",
          "type": "string",
          "format": "uri"
        },
        "areaTypeCodeForDistrict": {
          "description": "The area_type_code that is being used as districts, fetched from the areas endpoint (when [fetchDistrictsFromBackend](#fetchDistrictsFromBackend) is set to true).",
          "type": "string"
        },
        "featureFlags": {
          "$ref": "#/definitions/FeatureFlags"
        },
        "head": {
          "$ref": "#/definitions/Head"
        },
        "language": {
          "$ref": "#/definitions/Language"
        },
        "links": {
          "$ref": "#/definitions/Links"
        },
        "logo": {
          "$ref": "#/definitions/Logo"
        },
        "map": {
          "$ref": "#/definitions/Map"
        },
        "oidc": {
          "$ref": "#/definitions/Oidc"
        },
        "azure": {
          "$ref": "#/definitions/Azure"
        },
        "theme": {
          "$ref": "#/definitions/Theme"
        },
        "frontPageAlert": {
          "$ref": "#/definitions/FrontPageAlert"
        },
        "piwik": {
          "$ref": "#/definitions/Piwik"
        },
        "additionalCode": {
          "$ref": "#/definitions/AdditionalCode"
        }
      },
      "required": [
        "apiBaseUrl",
        "areaTypeCodeForDistrict",
        "head",
        "language",
        "links",
        "logo",
        "map",
        "oidc"
      ],
      "title": "Config"
    },
    "FeatureFlags": {
      "type": "object",
      "additionalProperties": false,
      "description": "Feature flag toggles",
      "properties": {
        "appMode": {
          "description": "When true, will render the application in app mode, hiding specific UI elements",
          "type": "boolean"
        },
        "assignSignalToDepartment": {
          "description": "Feature switch to enable assigning an incident to a department directly.",
          "type": "boolean"
        },
        "assignSignalToEmployee": {
          "description": "Feature switch to enable assigning an incident to an individual employee.",
          "type": "boolean"
        },
        "enableCsvExport": {
          "description": "Enables an extra item in the settings page to go to a page where you can download the latest csv export. The user will also need the right permissions to be able to see the export page.",
          "type": "boolean"
        },
        "enableNearIncidents": {
          "description": "Feature switch to enable showing incidents based on proximity to a reference incident. Needs to have the feature flags 'API_SIGNAL_CONTEXT' and 'API_SIGNAL_CONTEXT_NEAR' enabled in the backend.",
          "type": "boolean"
        },
        "enablePublicSignalMap": {
          "description": "Feature switch to enable the publicly accessable page which shows a map with all incidents. This makes use of the 'MAP_SIGNALS_ENDPOINT' endpoint and needs to have the feature flag 'ENABLE_PUBLIC_GEO_SIGNAL_ENDPOINT' enabled in the backend.",
          "type": "boolean"
        },
        "enableMyIncidents": {
          "description": "Feature switch to enable My Incidents which displays a user's incidents from last year based. This makes use of the 'MY_SIGNALS_LOGIN_URL' endpoint and needs to have the feature flag 'MY_SIGNALS_ENABLED' enabled in the backend.",
          "type": "boolean"
        },
        "enableReporter": {
          "description": "Feature switch to enable showing incident reporter context, like other incidents reported by the given reporter or feedback results. Needs to have the feature flags 'API_SIGNAL_CONTEXT' and 'API_SIGNAL_CONTEXT_REPORTER' enabled in the backend.",
          "type": "boolean"
        },
        "enableAmsterdamSpecificOverigCategories": {
          "description": "Enable category translations that are specific for Amsterdam.",
          "type": "boolean"
        },
        "enablePublicIncidentsMap": {
          "description": "Feature switch to enable the /meldingenkaart route where a public map is shown with all public available incidents.",
          "type": "boolean"
        },
        "enableMultipleKtoAnswers": {
          "description": "Feature switch to enable multiple kto questions.",
          "type": "boolean"
        },
        "fetchDistrictsFromBackend": {
          "description": "Feature switch to use the areas endpoint to fetch districts, instead of using the hardcoded stadsdelen",
          "type": "boolean"
        },
        "fetchQuestionsFromBackend": {
          "description": "When true, will bypass getting the configuration for the incident submission form questions from local modules. Instead, a request to an API endpoint is made to retrieve the configuration. See [QUESTIONS_ENDPOINT](#QUESTIONS_ENDPOINT)",
          "type": "boolean"
        },
        "mapFilter24Hours": {
          "description": "When true, will show no more and no less than the incidents of the last 24 hours on the map (in the back office), regardless of the start and end date filters.",
          "type": "boolean"
        },
        "showThorButton": {
          "description": "When true, will show THOR button to the top right on the detail page of a signal",
          "type": "boolean"
        },
        "showVulaanControls": {
          "description": "When true, will show extra questions after the first page of questions in the incident submission form",
          "type": "boolean"
        },
        "useProjectenSignalType": {
          "description": "When true, will make a textual change to the signal type 'Groot onderhoud', becoming 'Projecten'. This is temporarily needed until the signal types have been moved to the database.",
          "type": "boolean"
        },
        "reporterMailHandledNegativeContactEnabled": {
          "description": "When true, will show a feedback text based on the satisfaction value yes or no.",
          "type": "boolean"
        },
        "enableForwardIncidentToExternal": {
          "description": "Enables forwarding the handling of an incident to an external organization.",
          "type": "boolean"
        },
        "showMainCategories": {
          "description": "Shows main categories in settings",
          "type": "boolean"
        },
        "disableClosingCategoryOverigOverig": {
          "description": "Disallows processing of an issue that has category Overig-overig and status Afgehandeld",
          "type": "boolean"
        },
        "showStandardTextAdminV1": {
          "description": "Shows the old way of managing standard text for email responses.",
          "type": "boolean"
        },
        "showStandardTextAdminV2": {
          "description": "Shows the new way of managing standard text for email responses. One text can be assigned to multiple statuses.",
          "type": "boolean"
        },
        "showContactEdit": {
          "description": "Shows the contact edit and cancel button and form in the backoffice.",
          "type": "boolean"
        }
      },
      "required": [
        "assignSignalToDepartment",
        "assignSignalToEmployee",
        "enableCsvExport",
        "enableNearIncidents",
        "enablePublicSignalMap",
        "enableReporter",
        "enableAmsterdamSpecificOverigCategories",
        "fetchDistrictsFromBackend",
        "fetchQuestionsFromBackend",
        "mapFilter24Hours",
        "showThorButton",
        "showVulaanControls",
        "useProjectenSignalType"
      ],
      "title": "FeatureFlags"
    },
    "Head": {
      "type": "object",
      "additionalProperties": false,
      "description": "Site head configuration",
      "properties": {
        "androidIcon": {
          "type": "string",
          "description": "PNG image in `src/images` folder. Should be an absolute URL since Webpack copies it in the web root on build"
        },
        "backgroundColor": {
          "type": "string",
          "description": "Background color for the splash screen when the application is first launched on mobile"
        },
        "favicon": {
          "description": "PNG image in `src/images` folder",
          "type": "string"
        },
        "iosIcon": {
          "description": "PNG image in `src/images` folder",
          "type": "string"
        },
        "statusBarStyle": {
          "type": "string",
          "description": "Contains value that sets the style of the status bar for the web application. See https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariHTMLRef/Articles/MetaTags.html#:~:text=apple%2Dmobile%2Dweb%2Dapp%2Dstatus%2Dbar%2Dstyle,-Sets%20the%20style&text=If%20set%20to%20black%20%2C%20the,displayed%20below%20the%20status%20bar for reference"
        },
        "themeColor": {
          "type": "string",
          "description": "Value that sets the color of the tool bar, and may be reflected in the app's preview in task switchers"
        }
      },
      "required": [
        "androidIcon",
        "backgroundColor",
        "favicon",
        "iosIcon",
        "statusBarStyle",
        "themeColor"
      ],
      "title": "Head"
    },
    "Language": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "consentToContactSharing": {
          "description": "The message to ask for consent to share contact information",
          "type": "string"
        },
        "district": {
          "description": "The label for the district (stadsdeel/wijk)",
          "type": "string"
        },
        "headerTitle": {
          "description": "The title to show in the header of the application, next to the logo",
          "type": "string"
        },
        "helpText": {
          "description": "The text to show at the bottom of the signals form (can contain a markdown link)",
          "type": "string"
        },
        "helpTextHeader": {
          "description": "The header of the text at the bottom of the signals form (can contain a markdown link)",
          "type": "string"
        },
        "logoDescription": {
          "description": "ARIA description for the site logo",
          "type": "string"
        },
        "mapDescription": {
          "description": "ARIA description for the map input",
          "type": "string"
        },
        "phoneNumber": {
          "description": "General phone number",
          "type": "string"
        },
        "shortTitle": {
          "description": "PWA `short_name` property value. Should not exceed 12 characters. See https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/short_name for reference. This is also being used in the filename of a downloadable PDF of an incident.",
          "type": "string"
        },
        "siteAddress": {
          "description": "The site's address, for having a means of referencing the site by its address",
          "type": "string"
        },
        "siteTitle": {
          "description": "Application title showing up in the title bar and search results",
          "type": "string"
        },
        "smallHeaderTitle": {
          "description": "The title to show in the small version of the header",
          "type": "string"
        },
        "title": {
          "description": "PWA title value. See https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariHTMLRef/Articles/MetaTags.html#:~:text=apple%2Dmobile%2Dweb%2Dapp%2Dstatus%2Dbar%2Dstyle,-Sets%20the%20style&text=If%20set%20to%20black%20%2C%20the,displayed%20below%20the%20status%20bar for reference",
          "type": "string"
        },
        "urgentContactInfo": {
          "description": "Extra information to show in case of an error",
          "type": "string"
        }
      },
      "required": [
        "consentToContactSharing",
        "district",
        "headerTitle",
        "helpText",
        "helpTextHeader",
        "logoDescription",
        "mapDescription",
        "phoneNumber",
        "shortTitle",
        "siteAddress",
        "siteTitle",
        "smallHeaderTitle",
        "title",
        "urgentContactInfo"
      ],
      "title": "Language"
    },
    "Links": {
      "description": "Various Links",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "help": {
          "description": "A website with help about the application, for employees of the municipality",
          "type": "string",
          "format": "uri"
        },
        "home": {
          "description": "The home page of the website of the municipality",
          "type": "string",
          "format": "uri"
        },
        "privacy": {
          "description": "The privacy statement of the municipality",
          "type": "string",
          "format": "uri"
        },
        "about": {
          "description": "About this site statement of the municipality",
          "type": "string",
          "format": "uri-reference"
        },
        "accessibility": {
          "description": "The accessibility statement of the municipality",
          "type": "string",
          "format": "uri-reference"
        }
      },
      "required": ["help", "home", "privacy"],
      "title": "Links"
    },
    "Logo": {
      "description": "Logo configuration",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "url": {
          "description": "Any URL that will hold the image for the application's logo. Can be a URI or an absolute URL that points to the webroot",
          "type": ["string", "null"]
        },
        "width": {
          "description": "Length value that sets the logo image's width. See https://developer.mozilla.org/en-US/docs/Web/CSS/width for reference",
          "type": ["string", "integer"]
        },
        "height": {
          "description": "Length value that sets the logo image's height. In pixels, the height should be 74 or less.",
          "type": ["string", "integer"]
        },
        "smallWidth": {
          "description": "Length value that sets the logo image's width in case the logo is rendered in a site header with limited height",
          "type": ["string", "integer"]
        },
        "smallHeight": {
          "description": "Length value that sets the logo image's height in case the logo is rendered in a site header with limited height. In pixels, the smallHeight should be 34 or less.",
          "type": ["string", "integer"]
        }
      },
      "required": ["height", "smallHeight", "smallWidth", "url", "width"],
      "title": "Logo"
    },
    "Map": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "keys": {
          "type": "object",
          "additionalProperties": false,
          "description": "Place to store public keys related to maps",
          "properties": {
            "dataPlatform": {
              "type": "string",
              "description": "Key needed for calls to dataPlatform api's. Should be renewed every year"
            }
          }
        },
        "municipality": {
          "description": "Allows to filter address lookup by municipality. For example a value of 'amsterdam' will be used in the following format: `fq=gemeentenaam:(amsterdam)`. Separate multiple municipalities with a space. If a municipality has spaces, surround it by quotes, which in the config will look like `\"boxtel \\\"den bosch\\\"\"`. For more information see https://github.com/PDOK/locatieserver/wiki/API-Locatieserver",
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/MapOptions"
        },
        "optionsBackOffice": {
          "$ref": "#/definitions/OptionsBackOffice"
        },
        "optionsAreaMap": {
          "$ref": "#/definitions/OptionsAreaMap"
        },
        "optionsOverviewMap": {
          "$ref": "#/definitions/OptionsOverviewMap"
        },
        "optionsSummaryMap": {
          "$ref": "#/definitions/OptionsSummaryMap"
        },
        "optionsIncidentMap": {
          "$ref": "#/definitions/OptionsIncidentMap"
        },
        "optionsMapInput": {
          "$ref": "#/definitions/OptionsMapInput"
        },
        "optionsIncidentDetailLocation": {
          "$ref": "#/definitions/OptionsIncidentDetailLocation"
        },
        "optionsAssetSelector": {
          "$ref": "#/definitions/OptionsAssetSelector"
        },
        "optionsMyIncidentsMap": {
          "$ref": "#/definitions/OptionsMyIncidentsMap"
        },
        "optionsExternalReplyLocation": {
          "$ref": "#/definitions/OptionsExternalReplyLocation"
        },
        "optionsExternalReplyMap": {
          "$ref": "#/definitions/OptionsExternalReplyMap"
        },
        "tiles": {
          "$ref": "#/definitions/Tiles"
        },
        "layers": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "bomen": {
              "description": "GeoJSON URL for the retrieval of tree location data. Used by the incident form for showing tree locations on a map\n\nNo Swagger documentation available",
              "type": "string",
              "format": "uri-template"
            },
            "containers": {
              "description": "GeoJSON URL for the retrieval of container location data. Used by the incident form for showing container locations on a map\n\nNo Swagger documentation available",
              "type": "string",
              "format": "uri-template"
            },
            "eikenprocessierups": {
              "description": "GeoJSON URL for the retrieval of oak caterpillar data. Used by the incident form for showing oak caterpillar locations on a map\n\nNo Swagger documentation available",
              "type": "string",
              "format": "uri-template"
            },
            "klokken": {
              "description": "GeoJSON URL for the retrieval of public clock location data. Used by the incident form for showing clock locations on a map\n\nNo Swagger documentation available",
              "type": "string",
              "format": "uri-template"
            },
            "verlichting": {
              "description": "GeoJSON URL for the retrieval of street light data. Used by the incident form for showing street light locations on a map\n\nNo Swagger documentation available",
              "type": "string",
              "format": "uri-template"
            }
          }
        },
        "pdok": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "suggest": {
              "description": "PDOK url to search for suggestions for addresses",
              "type": "string",
              "format": "uri-template"
            },
            "reverse": {
              "description": "PDOK url to reverse coordinates to a readable address",
              "type": "string",
              "format": "uri-template"
            }
          }
        }
      },
      "required": ["municipality", "options", "tiles"],
      "title": "Map"
    },
    "MapOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "crs": {
          "description": "The Coordinate Reference System (CRS) of the map",
          "enum": ["EPSG:28992", "EPSG:3857", "EPSG:4326"]
        },
        "center": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "maxBounds": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "maxNumberOfAssets": {
          "type": "object",
          "properties": {
            "straatverlichting": {
              "type": "integer"
            },
            "klokken": {
              "type": "integer"
            },
            "afvalContainer": {
              "type": "integer"
            },
            "eikenProcessierups": {
              "type": "integer"
            }
          }
        },
        "maxZoom": {
          "type": "integer"
        },
        "minZoom": {
          "type": "integer"
        },
        "zoom": {
          "type": "integer"
        }
      },
      "required": ["crs", "center", "maxBounds", "maxZoom", "minZoom", "zoom"],
      "title": "MapOptions"
    },
    "Oidc": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "authEndpoint": {
          "description": "Authentication URL for the oAuth2 service",
          "format": "uri",
          "type": "string"
        },
        "clientId": {
          "description": "oAuth2 `client_id` service parameter value",
          "type": "string"
        },
        "realm": {
          "description": "Keycloak `realm` service parameter value",
          "type": "string"
        },
        "responseType": {
          "description": "oAuth2 `response_type` service parameter value",
          "enum": ["token", "id_token", "code"]
        },
        "scope": {
          "description": "oAuth2 `scope` service parameter value",
          "type": "string"
        }
      },
      "required": ["authEndpoint", "clientId", "scope", "responseType"]
    },
    "OptionsBackOffice": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "center": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "maxZoom": {
          "type": "integer"
        },
        "minZoom": {
          "type": "integer"
        },
        "zoom": {
          "type": "integer"
        }
      },
      "required": [],
      "title": "OptionsBackOffice"
    },
    "OptionsAreaMap": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "focusRadiusMeters": {
          "type": "integer",
          "description": "Defines the radius of the view circle of the area map that shows nearby incidents. Should be the same as the SIGNAL_API_CONTEXT_GEOGRAPHY_RADIUS configuration in the backend."
        },
        "zoom": {
          "type": "integer"
        },
        "maxZoom": {
          "type": "integer"
        }
      }
    },
    "OptionsOverviewMap": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "flyToMinZoom": {
          "type": "integer"
        }
      }
    },
    "OptionsSummaryMap": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "zoom": {
          "type": "integer"
        }
      }
    },
    "OptionsIncidentMap": {
      "type": "object",
      "additionalProperties": false,
      "title": "OptionsIncidentMap",
      "properties": {
        "zoom": {
          "type": "integer"
        },
        "flyToMaxZoom": {
          "type": "integer"
        },
        "flyToMinZoom": {
          "type": "integer"
        }
      }
    },
    "OptionsMapInput": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "zoom": {
          "type": "integer"
        }
      }
    },
    "OptionsIncidentDetailLocation": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "zoom": {
          "type": "integer"
        }
      }
    },
    "OptionsAssetSelector": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "assetsZoom": {
          "type": "integer"
        },
        "locationZoom": {
          "type": "integer"
        }
      }
    },
    "OptionsMyIncidentsMap": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "zoom": {
          "type": "integer"
        }
      }
    },
    "OptionsExternalReplyLocation": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "zoom": {
          "type": "integer"
        }
      }
    },
    "OptionsExternalReplyMap": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "zoom": {
          "type": "integer"
        }
      }
    },
    "Tiles": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "args": {
          "description": "Array of URL template strings to initialise the Leaflet TileLayer. See https://leafletjs.com/reference-1.6.0.html#tilelayer for reference Used in the `Map` (src/components/Map/index.js)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "options": {
          "description": "Object with Leaflet TileLayer configuration properties. See https://leafletjs.com/reference-1.6.0.html#tilelayer for reference\n\nUsed in the `Map` component (src/components/Map/index.js)",
          "$ref": "#/definitions/TilesOptions"
        }
      },
      "required": ["args", "options"],
      "title": "Tiles"
    },
    "TilesOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "attribution": {
          "type": "string"
        },
        "maxZoom": {
          "type": "integer"
        },
        "maxNativeZoom": {
          "type": "integer"
        },
        "subdomains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tms": {
          "type": "boolean"
        }
      },
      "required": ["attribution", "tms"],
      "title": "TilesOptions"
    },
    "Azure": {
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "connectionString": {
          "type": "string",
          "description": "Azure data source name value. When omitted, Azure will not be initialised in the application"
        }
      },
      "required": [],
      "title": "Azure"
    },
    "Theme": {
      "description": "Configuration object that is merged with the application's theme provider configuration and will override any existing theme configuration. See the `amsterdam styled components theme configuration (https://github.com/Amsterdam/amsterdam-styled-components/blob/master/packages/asc-ui/src/theme/default/index.ts) for the structure of the object.\n\nUsed in the `ThemeProvider` component (src/components/ThemeProvider/index.js). For more information on the options see: https://github.com/Amsterdam/amsterdam-styled-components/tree/master/packages/asc-ui/src/theme",
      "type": "object",
      "additionalProperties": true,
      "title": "Theme"
    },
    "FrontPageAlert": {
      "description": "Generic alert shown on wizard-step-1 page. Municipalities can set their own text. If there is no text, no alert will be shown.",
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        }
      },
      "title": "FrontPageAlert"
    },
    "Piwik": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "description": "Piwik api key"
        }
      },
      "title": "Piwik"
    },
    "AdditionalCode": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "css": {
          "type": "string",
          "description": "Additional CSS code"
        }
      },
      "title": "AdditionalCode"
    }
  }
}
